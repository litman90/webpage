{"title":"Query Pubmed in R","markdown":{"yaml":{"title":"Query Pubmed in R","date":"2018-11-23","categories":["R","PhD"],"execute":{"cache":true}},"headingText":"Little demo","containsRefs":false,"markdown":"\n\nI have seen a couple of presentations that use plots of PubMed query results. I have even seen some of them in papers. I just think it's really cool, so I wanted to play with something that could provide the data.\n\nA couple of google searches lead me into two nice options to do this in R.\n\n1)  `RISmed` package, see [CRAN](https://cran.r-project.org/web/packages/RISmed/index.html) or [Dave Tang's Blog](https://davetang.org/muse/2013/10/31/querying-pubmed-using-r/)\n2)  A custom approach from [Kristoffer Magnusson](https://github.com/rpsychologist/PubMed)\n\nI went with the custom approach, decided to **borrow heavily** from Kristoffer's repo, and did a few modifications here and there. Mainly, I updated libraries, included some `dplyr` output to make it cleaner, and separated functions into several files.\n\nYou can find the updated code in the following repo:\n\n<https://github.com/matiasandina/pubmed_query>\n\nThe logic of the code is to loop over the search terms and the years, performing queries to PubMed each time. To make things more friendly we wrap everything into a *main* function that performs some checks and handles the multiple calls to the working functions. This main function, `query_pubmed()`, expects a query (character vector), and 2 years for the time interval (`yrStart` and `yrMax`).\n\nThe function is somewhat self contained, if it can't find things on the local computer it will source from GitHub[^1]. Here's a little demo of the main function `query_pubmed()`. Since we are using internet to get the data, I assume the user will be able to source from GitHub (these calls are often performed via `devtools::source_url`).\n\n[^1]: Granted, several packages are needed to run the code. I assume users will know how to `install.packages(...)` if in need.\n\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\nlibrary(ggplot2)\nlibrary(dplyr)\ndevtools::source_url(\"https://raw.githubusercontent.com/matiasandina/pubmed_query/master/src/query_pubmed.R\")\n```\n\nLet's look for the term `hiv` in publications from the 1970 until today. PubMed requests us to limit the traffic to \\~3 queries per second. Thus, queries will take a while because the function has `Sys.sleep(0.5)` in between iterations. You will see a progress bar for each term (not shown here for simplicity).\n\n```{r}\n#| message: false\n#| include: true\n#| results: hide\n#| warning: false\n#| fig.cap: PubMed publications containing the term HIV relative to the total number\n#|   of publications.\nhiv <- query_pubmed(\"hiv\", 1970, 2018)\n\n```\n\nI chose to keep the graphic output as simple as possible (aka use ggplot2 defaults) and return a `data.frame` that can be fed into a custom `ggplot2` call later, if the users feel like it. Here's a glimpse of the returned object.\n\n```{r}\nhead(hiv)\n```\n\n## Making things faster\n\nTotal publication numbers should not change[^2]. Thus, if we don't want to waste time grabbing the total number of publications over and over, we can either:\n\n[^2]: There are some variations in the recent years as the data base updates, but shouldn't be significant for these purposes.\n\n1)  Use `get_totals()`\n2)  Get it from GitHub\n\nI will do my best, but I can't be certain I will keep running the function and pushing once a year to GitHub (as in forever)[^3]. I don't feel like waiting, I already have a recent version in the repo.\n\n[^3]: Yes, I guess I could automate it but reaching diminishing returns here...\n\n```{r}\n# Option one: run the function\n# total_table_updated <- get_totals(1947,2018)\n\n# Option two\ntotal_table_updated <- read.csv('https://raw.githubusercontent.com/matiasandina/pubmed_query/master/data/total_table_updated.csv')\n\n```\n\nHaving this object around will speed the main function (it will not query PubMed every year for the totals). Here's a graph of the number of publications by year:\n\n```{r}\n#| echo: false\n#| fig.cap: Total publications in PubMed by year. Science is growing :)\n\nggplot(total_table_updated, \n       aes(year, total_count))+\n  geom_area(alpha = 0.9, \n            color = \"black\", \n            linewidth = 0.8)+\n  theme_bw()+\n  labs(title = \"Science Grows at Exponential Pace\", \n       y = \"Number of publications\")+\n  scale_y_continuous(labels = scales::label_number_si())\n\n```\n\n## Multiple terms\n\nWe can use multiple terms to query, just make a character vector. For example, let's add `aids` and `hepatitis b`:\n\n```{r}\n#| warning: false\n#| include: true\n#| results: hide\naids_hepB <- query_pubmed(c('aids', 'hepatitis b'), 1970, 2018)\n```\n\nBecause we saved the previous object in the environment, we don't have to query again, we can merge the data and plot all together.\n\n```{r}\n#| warning: false\n#| fig.cap: Frequency of query terms. Relative to total number of PubMed entries per\n#|   year.\n\nbind_rows(hiv, aids_hepB) %>%\n  ggplot(aes(year, freq, fill=query_term)) +\n  geom_area(position = \"identity\",\n            alpha=0.6)+\n  geom_line(lwd=0.4, color=\"black\")+\n  scale_fill_manual(values = c(\"#EBCF02\",\n                               \"gray10\",\n                               \"#1AD0EE\"))+\n  theme_bw()+\n  theme(legend.position = \"bottom\",\n        legend.title = element_blank())+\n  ylab(\"Relative frequency (%)\")\n\n```\n\nWe see that the term `aids` came first in the literature, before the virus was identified, in the early 1980s. Although strongly correlated with `aids`, `hiv` is a term with higher frequency. Research for `hepatitis b` seems to have kept a constant relative level, growing as much as the total body of research.\n\n------------------------------------------------------------------------\n","srcMarkdownNoYaml":"\n\nI have seen a couple of presentations that use plots of PubMed query results. I have even seen some of them in papers. I just think it's really cool, so I wanted to play with something that could provide the data.\n\nA couple of google searches lead me into two nice options to do this in R.\n\n1)  `RISmed` package, see [CRAN](https://cran.r-project.org/web/packages/RISmed/index.html) or [Dave Tang's Blog](https://davetang.org/muse/2013/10/31/querying-pubmed-using-r/)\n2)  A custom approach from [Kristoffer Magnusson](https://github.com/rpsychologist/PubMed)\n\nI went with the custom approach, decided to **borrow heavily** from Kristoffer's repo, and did a few modifications here and there. Mainly, I updated libraries, included some `dplyr` output to make it cleaner, and separated functions into several files.\n\nYou can find the updated code in the following repo:\n\n<https://github.com/matiasandina/pubmed_query>\n\nThe logic of the code is to loop over the search terms and the years, performing queries to PubMed each time. To make things more friendly we wrap everything into a *main* function that performs some checks and handles the multiple calls to the working functions. This main function, `query_pubmed()`, expects a query (character vector), and 2 years for the time interval (`yrStart` and `yrMax`).\n\nThe function is somewhat self contained, if it can't find things on the local computer it will source from GitHub[^1]. Here's a little demo of the main function `query_pubmed()`. Since we are using internet to get the data, I assume the user will be able to source from GitHub (these calls are often performed via `devtools::source_url`).\n\n[^1]: Granted, several packages are needed to run the code. I assume users will know how to `install.packages(...)` if in need.\n\n## Little demo\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\nlibrary(ggplot2)\nlibrary(dplyr)\ndevtools::source_url(\"https://raw.githubusercontent.com/matiasandina/pubmed_query/master/src/query_pubmed.R\")\n```\n\nLet's look for the term `hiv` in publications from the 1970 until today. PubMed requests us to limit the traffic to \\~3 queries per second. Thus, queries will take a while because the function has `Sys.sleep(0.5)` in between iterations. You will see a progress bar for each term (not shown here for simplicity).\n\n```{r}\n#| message: false\n#| include: true\n#| results: hide\n#| warning: false\n#| fig.cap: PubMed publications containing the term HIV relative to the total number\n#|   of publications.\nhiv <- query_pubmed(\"hiv\", 1970, 2018)\n\n```\n\nI chose to keep the graphic output as simple as possible (aka use ggplot2 defaults) and return a `data.frame` that can be fed into a custom `ggplot2` call later, if the users feel like it. Here's a glimpse of the returned object.\n\n```{r}\nhead(hiv)\n```\n\n## Making things faster\n\nTotal publication numbers should not change[^2]. Thus, if we don't want to waste time grabbing the total number of publications over and over, we can either:\n\n[^2]: There are some variations in the recent years as the data base updates, but shouldn't be significant for these purposes.\n\n1)  Use `get_totals()`\n2)  Get it from GitHub\n\nI will do my best, but I can't be certain I will keep running the function and pushing once a year to GitHub (as in forever)[^3]. I don't feel like waiting, I already have a recent version in the repo.\n\n[^3]: Yes, I guess I could automate it but reaching diminishing returns here...\n\n```{r}\n# Option one: run the function\n# total_table_updated <- get_totals(1947,2018)\n\n# Option two\ntotal_table_updated <- read.csv('https://raw.githubusercontent.com/matiasandina/pubmed_query/master/data/total_table_updated.csv')\n\n```\n\nHaving this object around will speed the main function (it will not query PubMed every year for the totals). Here's a graph of the number of publications by year:\n\n```{r}\n#| echo: false\n#| fig.cap: Total publications in PubMed by year. Science is growing :)\n\nggplot(total_table_updated, \n       aes(year, total_count))+\n  geom_area(alpha = 0.9, \n            color = \"black\", \n            linewidth = 0.8)+\n  theme_bw()+\n  labs(title = \"Science Grows at Exponential Pace\", \n       y = \"Number of publications\")+\n  scale_y_continuous(labels = scales::label_number_si())\n\n```\n\n## Multiple terms\n\nWe can use multiple terms to query, just make a character vector. For example, let's add `aids` and `hepatitis b`:\n\n```{r}\n#| warning: false\n#| include: true\n#| results: hide\naids_hepB <- query_pubmed(c('aids', 'hepatitis b'), 1970, 2018)\n```\n\nBecause we saved the previous object in the environment, we don't have to query again, we can merge the data and plot all together.\n\n```{r}\n#| warning: false\n#| fig.cap: Frequency of query terms. Relative to total number of PubMed entries per\n#|   year.\n\nbind_rows(hiv, aids_hepB) %>%\n  ggplot(aes(year, freq, fill=query_term)) +\n  geom_area(position = \"identity\",\n            alpha=0.6)+\n  geom_line(lwd=0.4, color=\"black\")+\n  scale_fill_manual(values = c(\"#EBCF02\",\n                               \"gray10\",\n                               \"#1AD0EE\"))+\n  theme_bw()+\n  theme(legend.position = \"bottom\",\n        legend.title = element_blank())+\n  ylab(\"Relative frequency (%)\")\n\n```\n\nWe see that the term `aids` came first in the literature, before the virus was identified, in the early 1980s. Although strongly correlated with `aids`, `hiv` is a term with higher frequency. Research for `hepatitis b` seems to have kept a constant relative level, growing as much as the total body of research.\n\n------------------------------------------------------------------------\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":true,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"filters":["social-embeds","social-share"],"include-after-body":["../../footer.html"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","comments":{"utterances":{"repo":"matiasandina/Webpage","label":"Comment","theme":"github-dark"}},"theme":{"light":["flatly","../../theme.scss"],"dark":["darkly","../../dark.scss"]},"code-copy":true,"grid":{"body-width":"900px","margin-width":"300px","gutter-width":"1.5rem"},"title-block-banner":true,"license":"CC BY","toc-title":"Table of contents","toc-location":"right","author":[{"name":"Matias Andina","url":"https://matiasandina.netlify.app","affiliation":"Massachusetts Institute of Technology","orcid":"0000-0002-1996-2539"}],"citation":true,"share":{"permalink":"https://matiasandina.netlify.app/","description":"Matias Andina","twitter":true,"facebook":true,"reddit":true,"stumble":true,"tumblr":false,"linkedin":true,"email":true,"mastodon":true},"title":"Query Pubmed in R","date":"2018-11-23","categories":["R","PhD"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}