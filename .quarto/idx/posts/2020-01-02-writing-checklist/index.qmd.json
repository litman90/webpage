{"title":"Writing Checklist","markdown":{"yaml":{"title":"Writing Checklist","date":"2020-01-02","categories":["writing","learning","documentinglearning","R"],"execute":{"echo":true}},"headingText":"Creating the checklist","containsRefs":false,"markdown":"\n\nI spent a good portion of the end of 2019 and the beginning of 2020 reading Paul Graham's essays. Many caught my attention (and my fingers to take notes). I want to comment on an essay about advice for good writing. Because it was written in a way that allowed for easy reformatting (ideas separated by `;`), I thought it would be cool to convert the prose into a checklist).  \n\n\nThe main text comes from [here](http://www.paulgraham.com/writing44.html). For simplicity, I have only used the main paragraph (aka, copy and paste the second paragraph). I omitted it here because it would be long and you can read it in the native format from the source.\n\n```{r}\n#| echo: false\ntext <- c(\"Write a bad version 1 as fast as you can; rewrite it over and over; cut out everything unnecessary; write in a conversational tone; develop a nose for bad writing, so you can see and fix it in yours; imitate writers you like; if you can't get started, tell someone what you plan to write about, then write down what you said; expect 80% of the ideas in an essay to happen after you start writing it, and 50% of those you start with to be wrong; be confident enough to cut; have friends you trust read your stuff and tell you which bits are confusing or drag; don't (always) make detailed outlines; mull ideas over for a few days before writing; carry a small notebook or scrap paper with you; start writing when you think of the first sentence; if a deadline forces you to start before that, just say the most important sentence first; write about stuff you like; don't try to sound impressive; don't hesitate to change the topic on the fly; use footnotes to contain digressions; use anaphora to knit sentences together; read your essays out loud to see (a) where you stumble over awkward phrases and (b) which bits are boring (the paragraphs you dread reading); try to tell the reader something new and useful; work in fairly big quanta of time; when you restart, begin by rereading what you have so far; when you finish, leave yourself something easy to start with; accumulate notes for topics you plan to cover at the bottom of the file; don't feel obliged to cover any of them; write for a reader who won't read the essay as carefully as you do, just as pop songs are designed to sound ok on crappy car radios; if you say anything mistaken, fix it immediately; ask friends which sentence you'll regret most; go back and tone down harsh remarks; publish stuff online, because an audience makes you write more, and thus generate more ideas; print out drafts instead of just looking at them on the screen; use simple, germanic words; learn to distinguish surprises from digressions; learn to recognize the approach of an ending, and when one appears, grab it.\")\n\n```\n\nIn the code chunk below I comment the steps I took.\n\n```{r}\n# text is copy-paste of the second paragraph\n# text <- c(\"...\") ... == copy-paste\n\n# split using \"; \"\nsp <- stringr::str_split(text, \"; \")\n\n# To create a checklist\n# DASH SPACE [ ] SPACE SPACE\nsp <- paste0(\"- [ ]  \", unlist(sp))\n# append markdown title\nsp <- c(\"# Paul Graham's Writing Checklist\", sp)\n\n# Capitalize first letter of every sentence\nsp <- stringr::str_to_sentence(sp)\n```\n\nIf you want to write it to file, you can use `writeLines()`\n\n```{r}\n#| eval: false\n# write\nfileConn <- file(\"paul_graham_writing_checklist.md\")\nwriteLines(sp, fileConn)\nclose(fileConn)\n\n# If you want to knit to html you can do this\n# knitr::knit2html(\"paul_graham_writing_checklist.md\")\n\n```\n\nLet's take a look at the product:\n\n```{r}\n# printing for web post\ncat(sp, sep = \"\\n\")\n```\n\nThe checklist is not in strict chronological order, so I might try to reshape it later into something that would make more sense as a timeline. It will render as a checklist in something that is GitHub flavored (e.g., on GitHub). However, I will probably just use it as text file or print it as is. \n\nI also noticed that the link for the Spanish translation is broken/outdated, so I tried my best to translate it. [Here it is](/2020/01/escribiendo-en-pocas-palabras/)\n\n## Summary\n\nI think this checklist is an awesome learning opportunity and a clear path to improving one's writing. Quite happy to have found it, looking forward to improving my skills.\n\nI got to learn a few cool R things like, 1) I can use `writeLines()` to write a `.md` file and 2) `stringr::str_to_sentence()` is an **awesome** function.\n","srcMarkdownNoYaml":"\n\nI spent a good portion of the end of 2019 and the beginning of 2020 reading Paul Graham's essays. Many caught my attention (and my fingers to take notes). I want to comment on an essay about advice for good writing. Because it was written in a way that allowed for easy reformatting (ideas separated by `;`), I thought it would be cool to convert the prose into a checklist).  \n\n## Creating the checklist\n\nThe main text comes from [here](http://www.paulgraham.com/writing44.html). For simplicity, I have only used the main paragraph (aka, copy and paste the second paragraph). I omitted it here because it would be long and you can read it in the native format from the source.\n\n```{r}\n#| echo: false\ntext <- c(\"Write a bad version 1 as fast as you can; rewrite it over and over; cut out everything unnecessary; write in a conversational tone; develop a nose for bad writing, so you can see and fix it in yours; imitate writers you like; if you can't get started, tell someone what you plan to write about, then write down what you said; expect 80% of the ideas in an essay to happen after you start writing it, and 50% of those you start with to be wrong; be confident enough to cut; have friends you trust read your stuff and tell you which bits are confusing or drag; don't (always) make detailed outlines; mull ideas over for a few days before writing; carry a small notebook or scrap paper with you; start writing when you think of the first sentence; if a deadline forces you to start before that, just say the most important sentence first; write about stuff you like; don't try to sound impressive; don't hesitate to change the topic on the fly; use footnotes to contain digressions; use anaphora to knit sentences together; read your essays out loud to see (a) where you stumble over awkward phrases and (b) which bits are boring (the paragraphs you dread reading); try to tell the reader something new and useful; work in fairly big quanta of time; when you restart, begin by rereading what you have so far; when you finish, leave yourself something easy to start with; accumulate notes for topics you plan to cover at the bottom of the file; don't feel obliged to cover any of them; write for a reader who won't read the essay as carefully as you do, just as pop songs are designed to sound ok on crappy car radios; if you say anything mistaken, fix it immediately; ask friends which sentence you'll regret most; go back and tone down harsh remarks; publish stuff online, because an audience makes you write more, and thus generate more ideas; print out drafts instead of just looking at them on the screen; use simple, germanic words; learn to distinguish surprises from digressions; learn to recognize the approach of an ending, and when one appears, grab it.\")\n\n```\n\nIn the code chunk below I comment the steps I took.\n\n```{r}\n# text is copy-paste of the second paragraph\n# text <- c(\"...\") ... == copy-paste\n\n# split using \"; \"\nsp <- stringr::str_split(text, \"; \")\n\n# To create a checklist\n# DASH SPACE [ ] SPACE SPACE\nsp <- paste0(\"- [ ]  \", unlist(sp))\n# append markdown title\nsp <- c(\"# Paul Graham's Writing Checklist\", sp)\n\n# Capitalize first letter of every sentence\nsp <- stringr::str_to_sentence(sp)\n```\n\nIf you want to write it to file, you can use `writeLines()`\n\n```{r}\n#| eval: false\n# write\nfileConn <- file(\"paul_graham_writing_checklist.md\")\nwriteLines(sp, fileConn)\nclose(fileConn)\n\n# If you want to knit to html you can do this\n# knitr::knit2html(\"paul_graham_writing_checklist.md\")\n\n```\n\nLet's take a look at the product:\n\n```{r}\n# printing for web post\ncat(sp, sep = \"\\n\")\n```\n\nThe checklist is not in strict chronological order, so I might try to reshape it later into something that would make more sense as a timeline. It will render as a checklist in something that is GitHub flavored (e.g., on GitHub). However, I will probably just use it as text file or print it as is. \n\nI also noticed that the link for the Spanish translation is broken/outdated, so I tried my best to translate it. [Here it is](/2020/01/escribiendo-en-pocas-palabras/)\n\n## Summary\n\nI think this checklist is an awesome learning opportunity and a clear path to improving one's writing. Quite happy to have found it, looking forward to improving my skills.\n\nI got to learn a few cool R things like, 1) I can use `writeLines()` to write a `.md` file and 2) `stringr::str_to_sentence()` is an **awesome** function.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"filters":["social-embeds","social-share"],"include-after-body":["../../footer.html"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","editor":"visual","comments":{"utterances":{"repo":"matiasandina/Webpage","label":"Comment","theme":"github-dark"}},"theme":{"light":"cosmo","dark":"cosmo"},"code-copy":true,"title-block-banner":true,"license":"CC BY","toc-title":"Table of contents","toc-location":"right","author":[{"name":"Matias Andina","url":"https://matiasandina.netlify.app","affiliation":"Massachusetts Institute of Technology","orcid":"0000-0002-1996-2539"}],"citation":true,"share":{"permalink":"https://matiasandina.netlify.app/","description":"Matias Andina","twitter":true,"facebook":true,"reddit":true,"stumble":true,"tumblr":false,"linkedin":true,"email":true,"mastodon":true},"title":"Writing Checklist","date":"2020-01-02","categories":["writing","learning","documentinglearning","R"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}