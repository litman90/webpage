{
  "hash": "be633edf217b574624ff2d14124f8d1c",
  "result": {
    "markdown": "---\ntitle: Rotating perspectives\ndate: 2021-01-03\ncategories: [\"generative-art\",\"R\"]\nexecute: \n  echo: true\ncode-fold: true\ncode-summary: \"Show the Code\"\n---\n\n\nI have been asked to unveil a bit of what's under the hood on [this post](https://matiasandina.netlify.app/2021/01/art-in-a-new-year/). I decided to make a new post to share how my creative process took place and maybe inspire others to play along.\n\nSomething interesting about all of this is how well it plays into common sense. Looking at things from a different perspective, in this case adding just a rotation, can yield outstanding results.  \n\n### The shapes\n\nFirst of all, we are going to use the shapes provided by `ggforce::geom_regon()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggforce)\n\ndf <- data.frame(\n  x0=3:8,\n  y0=1,\n  r=0.2\n)\n\nggplot(df)+\n  geom_regon(aes(x0 = x0, y0 = y0,\n                 r = r, sides= x0, angle = 0),\n             fill=\"gray50\", color=\"black\")+\n  coord_equal()+\n  labs(title=\"Regular polygons using ggforce\", \n       x=\"\", y=\"\",\n       caption=\"@NeuroMLA\")+\n  theme(panel.background = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        plot.title = element_text(hjust=0.5))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/show-shapes-1.png){width=672}\n:::\n:::\n\n\n### The twist\n\nNow we can implement a rotation to each figure. We will use the previous `df` and `expand_grid()` to add an angle rotation to the regular polygon. The greater the number of sides, the closer we get to a circular shape illusion when we rotate and overlap the polygons. For `n>6` it didn't generate the type of look I was looking after during my experimentation. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- expand_grid(df, angle = seq(0, 0.5, 0.1))\n\n \nggplot(df)+\n  # notice we use angle = angle now\n  geom_regon(aes(x0=x0,y0=y0,r=r, sides=x0, angle=angle),\n             fill=\"gray50\", color=\"black\")+\n  coord_equal()+\n  labs(title=\"Rotated regular polygons using ggforce\", \n       x=\"\", y=\"\",\n       caption=\"@NeuroMLA\")+\n  theme(panel.background = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(), \n        plot.title = element_text(hjust=0.5))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/rotations-1.png){width=672}\n:::\n:::\n\n\nWe can tinker with the `alpha` and `fill` to make some nice looking shapes. I'm not going to modify `color` but it's also a possibility.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df)+\n  # notice we use angle = angle now and fil=factor(x0)\n  geom_regon(aes(x0=x0,y0=y0,r=r, sides=x0, angle=angle,\n                 fill=factor(x0)), \n             alpha=0.1, color=\"black\")+\n  coord_equal()+\n  labs(title=\"Rotated regular polygons using ggforce\", \n       x=\"\", y=\"\",\n       caption=\"@NeuroMLA\")+\n  theme(panel.background = element_blank(),\n        legend.position = \"none\",\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        plot.title = element_text(hjust=0.5)) -> p\n\nprint(p)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/color-tinkering-1.png){width=672}\n:::\n:::\n\n\n### Make it pallette\n\nWe can have unlimited color combinations. Just as a start, two places I like to use when dealing with color pallettes in R:\n\n* [R Color Brewer Pallettes](https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)\n* [Adobe Color Picker](https://color.adobe.com)\n\nWe will use `scale_fill_*()` functions of `ggplot`. I normally use `scale_fill_manual()` if I want to handpick the values, but `scale_fill_viridis()` and `scale_fill_brewer()` often do a nice job too!\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/pallettes-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/pallettes-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/pallettes-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/pallettes-4.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}