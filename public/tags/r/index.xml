<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Matias Andina</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Matias Andina</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>matiasandina@gmail.com (Matias Andina)</managingEditor>
    <webMaster>matiasandina@gmail.com (Matias Andina)</webMaster>
    <lastBuildDate>Fri, 13 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>XY-density-maps</title>
      <link>/2018/07/xy-density-maps/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      <author>matiasandina@gmail.com (Matias Andina)</author>
      <guid>/2018/07/xy-density-maps/</guid>
      <description>I have been playing around with tracking software and the ways to visualize the position of an animal in an arena over time. Even with normal cameras (30 Hz) and relatively small periods of time (~5 min) we get massive datasets and the only way to make sense of them is to aggregate data over time. I have been interested in neat visualizations (using R), thus here are some ways/comments. I will explore different packages and doing comparisons of the results.</description>
    </item>
    
    <item>
      <title>Github style calendar heatmaps</title>
      <link>/2018/05/github-style-calendar-heatmaps/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      <author>matiasandina@gmail.com (Matias Andina)</author>
      <guid>/2018/05/github-style-calendar-heatmaps/</guid>
      <description>I like how the commit heatmap looks in Github. I wanted to play with something that could be plotted that way. I’ve seen some beautiful things done in d3 and javascript. But, of course, I wanted to make it in R. Turns out a bunch of other people have great ideas for how to go about it. Thus, I’m borrowing heavily from them1.
library(ggplot2)library(dplyr)library(lubridate)library(viridis) # Color palettelibrary(ggthemes) # theme tufteLet’s generate a data.</description>
    </item>
    
    <item>
      <title>Matlab list_files</title>
      <link>/2018/04/matlab-list_files/</link>
      <pubDate>Tue, 24 Apr 2018 00:00:00 +0000</pubDate>
      <author>matiasandina@gmail.com (Matias Andina)</author>
      <guid>/2018/04/matlab-list_files/</guid>
      <description>For many purposes, I find myself in need of a Graphical User Interface (GUI). Thus, I experienced a forceful transition to Matlab. Let’s be honest, Matlab can do powerful things, it’s a great language to attempt to dominate (note to self: learn python!). However, I find myself over and over thinking in R mode. Something along the lines of:
Gimme all the files in…
Will be easily accomplished in R</description>
    </item>
    
  </channel>
</rss>