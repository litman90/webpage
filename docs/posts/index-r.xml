<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Yair Litman</title>
<link>https://matiasandina.netlify.app/posts/#category=R</link>
<atom:link href="https://matiasandina.netlify.app/posts/index-r.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.6.32</generator>
<lastBuildDate>Tue, 07 Nov 2023 00:00:00 GMT</lastBuildDate>
<item>
  <title>Original Text</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2023-11-07-original-text/</link>
  <description><![CDATA[ 





<p>I have been lately noticing a glaring trend in some of the non-fiction books that I read: the use and abuse of verbatim quotes. They come in the shape of:</p>
<blockquote class="blockquote">
<p>“As such and such said: INSERT LONG VERBATIM TEXT HERE”</p>
</blockquote>
<p>Of course, there are no rules regarding the use of verbatim text<sup>1</sup>. But, if I can get a sense of overuse only from reading the book, it makes me curious to go get look at the data.</p>
<p>How much of the book is actually a verbatim text dump? Would I bet is 10%? Maybe 20%? Would lower percentages make me go easier on the author or is this a lost cause (i.e., if I notice the overuse by reading, all hope is lost)?</p>
<section id="example-book" class="level2">
<h2 class="anchored" data-anchor-id="example-book">Example Book</h2>
<p>Enough of chatter. Let’s try to answer this by analyzing one of the books in question: “Do Nothing” by Celeste Headlee. Reading the book in R using the <code>epubr</code> package gives us this table:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read the epub</span></span>
<span id="cb1-2">book_text <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> epubr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">epub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Do Nothing - Celeste Headlee.epub"</span>)</span>
<span id="cb1-3">book_text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_sub</span>(text, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>),</span>
<span id="cb1-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(text, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..."</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-6">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># needs to get the text stings truncated</span></span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="mderspzntz" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#mderspzntz table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#mderspzntz thead, #mderspzntz tbody, #mderspzntz tfoot, #mderspzntz tr, #mderspzntz td, #mderspzntz th {
  border-style: none;
}

#mderspzntz p {
  margin: 0;
  padding: 0;
}

#mderspzntz .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#mderspzntz .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#mderspzntz .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#mderspzntz .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#mderspzntz .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mderspzntz .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mderspzntz .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mderspzntz .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#mderspzntz .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#mderspzntz .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#mderspzntz .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#mderspzntz .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#mderspzntz .gt_spanner_row {
  border-bottom-style: hidden;
}

#mderspzntz .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#mderspzntz .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#mderspzntz .gt_from_md > :first-child {
  margin-top: 0;
}

#mderspzntz .gt_from_md > :last-child {
  margin-bottom: 0;
}

#mderspzntz .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#mderspzntz .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#mderspzntz .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#mderspzntz .gt_row_group_first td {
  border-top-width: 2px;
}

#mderspzntz .gt_row_group_first th {
  border-top-width: 2px;
}

#mderspzntz .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mderspzntz .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#mderspzntz .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#mderspzntz .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mderspzntz .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mderspzntz .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#mderspzntz .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#mderspzntz .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#mderspzntz .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mderspzntz .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mderspzntz .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#mderspzntz .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mderspzntz .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#mderspzntz .gt_left {
  text-align: left;
}

#mderspzntz .gt_center {
  text-align: center;
}

#mderspzntz .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#mderspzntz .gt_font_normal {
  font-weight: normal;
}

#mderspzntz .gt_font_bold {
  font-weight: bold;
}

#mderspzntz .gt_font_italic {
  font-style: italic;
}

#mderspzntz .gt_super {
  font-size: 65%;
}

#mderspzntz .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#mderspzntz .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#mderspzntz .gt_indent_1 {
  text-indent: 5px;
}

#mderspzntz .gt_indent_2 {
  text-indent: 10px;
}

#mderspzntz .gt_indent_3 {
  text-indent: 15px;
}

#mderspzntz .gt_indent_4 {
  text-indent: 20px;
}

#mderspzntz .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="gt_col_headings header">
<th id="section" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">section</th>
<th id="text" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">text</th>
<th id="nword" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">nword</th>
<th id="nchar" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">nchar</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="section">titlepage</td>
<td class="gt_row gt_left" headers="text">...</td>
<td class="gt_row gt_right" headers="nword">0</td>
<td class="gt_row gt_right" headers="nchar">0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0001.xhtml</td>
<td class="gt_row gt_left" headers="text">...</td>
<td class="gt_row gt_right" headers="nword">0</td>
<td class="gt_row gt_right" headers="nchar">0</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0002.xhtml</td>
<td class="gt_row gt_left" headers="text">...</td>
<td class="gt_row gt_right" headers="nword">0</td>
<td class="gt_row gt_right" headers="nchar">0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0003.xhtml</td>
<td class="gt_row gt_left" headers="text">Copyright © 2020 by ...</td>
<td class="gt_row gt_right" headers="nword">111</td>
<td class="gt_row gt_right" headers="nchar">1014</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0004.xhtml</td>
<td class="gt_row gt_left" headers="text">CONTENTSCoverTitle P ...</td>
<td class="gt_row gt_right" headers="nword">93</td>
<td class="gt_row gt_right" headers="nchar">685</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0005.xhtml</td>
<td class="gt_row gt_left" headers="text">INTRODUCTIONIt will ...</td>
<td class="gt_row gt_right" headers="nword">3242</td>
<td class="gt_row gt_right" headers="nchar">18783</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0006.xhtml</td>
<td class="gt_row gt_left" headers="text">PART IThe Cult of Ef ...</td>
<td class="gt_row gt_right" headers="nword">5</td>
<td class="gt_row gt_right" headers="nchar">28</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0007.xhtml</td>
<td class="gt_row gt_left" headers="text">Chapter 1MIND THE GA ...</td>
<td class="gt_row gt_right" headers="nword">3270</td>
<td class="gt_row gt_right" headers="nchar">18268</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0008.xhtml</td>
<td class="gt_row gt_left" headers="text">Chapter 2IT STARTS W ...</td>
<td class="gt_row gt_right" headers="nword">4880</td>
<td class="gt_row gt_right" headers="nchar">28878</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0009.xhtml</td>
<td class="gt_row gt_left" headers="text">Chapter 3WORK ETHICI ...</td>
<td class="gt_row gt_right" headers="nword">3812</td>
<td class="gt_row gt_right" headers="nchar">22815</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0010.xhtml</td>
<td class="gt_row gt_left" headers="text">Chapter 4TIME BECOME ...</td>
<td class="gt_row gt_right" headers="nword">8804</td>
<td class="gt_row gt_right" headers="nchar">52065</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0011.xhtml</td>
<td class="gt_row gt_left" headers="text">Chapter 5WORK COMES ...</td>
<td class="gt_row gt_right" headers="nword">4271</td>
<td class="gt_row gt_right" headers="nchar">25298</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0012.xhtml</td>
<td class="gt_row gt_left" headers="text">Chapter 6THE BUSIEST ...</td>
<td class="gt_row gt_right" headers="nword">4773</td>
<td class="gt_row gt_right" headers="nchar">28006</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0013.xhtml</td>
<td class="gt_row gt_left" headers="text">Chapter 7DO WE LIVE ...</td>
<td class="gt_row gt_right" headers="nword">5022</td>
<td class="gt_row gt_right" headers="nchar">28949</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0014.xhtml</td>
<td class="gt_row gt_left" headers="text">Chapter 8UNIVERSAL H ...</td>
<td class="gt_row gt_right" headers="nword">5930</td>
<td class="gt_row gt_right" headers="nchar">35332</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0015.xhtml</td>
<td class="gt_row gt_left" headers="text">Chapter 9IS TECH TO ...</td>
<td class="gt_row gt_right" headers="nword">6036</td>
<td class="gt_row gt_right" headers="nchar">35402</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0016.xhtml</td>
<td class="gt_row gt_left" headers="text">PART IILeaving the C ...</td>
<td class="gt_row gt_right" headers="nword">12</td>
<td class="gt_row gt_right" headers="nchar">61</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0017.xhtml</td>
<td class="gt_row gt_left" headers="text">Life-Back OneCHALLEN ...</td>
<td class="gt_row gt_right" headers="nword">2345</td>
<td class="gt_row gt_right" headers="nchar">13558</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0018.xhtml</td>
<td class="gt_row gt_left" headers="text">Life-Back TwoTAKE TH ...</td>
<td class="gt_row gt_right" headers="nword">2570</td>
<td class="gt_row gt_right" headers="nchar">15330</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0019.xhtml</td>
<td class="gt_row gt_left" headers="text">Life-Back ThreeSTEP ...</td>
<td class="gt_row gt_right" headers="nword">3933</td>
<td class="gt_row gt_right" headers="nchar">22790</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0020.xhtml</td>
<td class="gt_row gt_left" headers="text">Life-Back FourINVEST ...</td>
<td class="gt_row gt_right" headers="nword">1925</td>
<td class="gt_row gt_right" headers="nchar">10856</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0021.xhtml</td>
<td class="gt_row gt_left" headers="text">Life-Back FiveMAKE R ...</td>
<td class="gt_row gt_right" headers="nword">2857</td>
<td class="gt_row gt_right" headers="nchar">16804</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0022.xhtml</td>
<td class="gt_row gt_left" headers="text">Life-Back SixTAKE TH ...</td>
<td class="gt_row gt_right" headers="nword">2161</td>
<td class="gt_row gt_right" headers="nchar">12337</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0023.xhtml</td>
<td class="gt_row gt_left" headers="text">CONCLUSIONWe have ch ...</td>
<td class="gt_row gt_right" headers="nword">2084</td>
<td class="gt_row gt_right" headers="nchar">12378</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0024.xhtml</td>
<td class="gt_row gt_left" headers="text">For Theresa, who has ...</td>
<td class="gt_row gt_right" headers="nword">14</td>
<td class="gt_row gt_right" headers="nchar">72</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0025.xhtml</td>
<td class="gt_row gt_left" headers="text">ACKNOWLEDGMENTSI WOR ...</td>
<td class="gt_row gt_right" headers="nword">355</td>
<td class="gt_row gt_right" headers="nchar">1995</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0026.xhtml</td>
<td class="gt_row gt_left" headers="text">NOTESIntroduction"Ou ...</td>
<td class="gt_row gt_right" headers="nword">4067</td>
<td class="gt_row gt_right" headers="nchar">28683</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="section">part0027.xhtml</td>
<td class="gt_row gt_left" headers="text">ABOUT THE AUTHORCELE ...</td>
<td class="gt_row gt_right" headers="nword">318</td>
<td class="gt_row gt_right" headers="nchar">1971</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="section">part0028.xhtml</td>
<td class="gt_row gt_left" headers="text">What's next onyour r ...</td>
<td class="gt_row gt_right" headers="nword">19</td>
<td class="gt_row gt_right" headers="nchar">139</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>We can get rid of the legal stuff that normally goes before the text and everything that comes after the content (i.e., acknowledgements and references).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A simple slice operation would do</span></span>
<span id="cb2-2">book_txt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> book_text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)</span></code></pre></div>
</details>
</div>
<p>We can also get some metadata from the text (will come useful for later).<br>
</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bind previous word and character counts</span></span>
<span id="cb3-2">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> book_txt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(section, nword, nchar) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"part"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>section)</span></code></pre></div>
</details>
</div>
<p>Now that we have the text, we can find all the instances of <code>"something in between these quotes here"</code> using <code>stringr::str_locate_all():</code></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract the text</span></span>
<span id="cb4-2">match_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_locate_all</span>(book_txt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>text, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'"(.*?)"'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># give names for future binding</span></span>
<span id="cb4-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># parts go from 5 to 23 (idx goes 6:24)</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_names</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nm =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"part"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert into tibble for easy binding</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(as_tibble) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"part"</span>)</span></code></pre></div>
</details>
</div>
<p>Below, I’m showing a slice with an example of matched character positions and how they would look like in the text. I want to direct your attention to the second and third row. I hope you notice that these two quotes are, in fact, one single quote that was split into two.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This is an example</span></span>
<span id="cb5-2">match_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map2_chr</span>(</span>
<span id="cb5-5">    start, end,  </span>
<span id="cb5-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(.x, .y) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_sub</span>(book_txt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>text[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]], .x, .y)</span>
<span id="cb5-7">  )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-8">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-9">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_style</span>(</span>
<span id="cb5-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cell_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weight =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>),</span>
<span id="cb5-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">locations =</span> gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cells_column_labels</span>()</span>
<span id="cb5-12">        )</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="wgroahpbhl" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#wgroahpbhl table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#wgroahpbhl thead, #wgroahpbhl tbody, #wgroahpbhl tfoot, #wgroahpbhl tr, #wgroahpbhl td, #wgroahpbhl th {
  border-style: none;
}

#wgroahpbhl p {
  margin: 0;
  padding: 0;
}

#wgroahpbhl .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#wgroahpbhl .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#wgroahpbhl .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#wgroahpbhl .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#wgroahpbhl .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#wgroahpbhl .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wgroahpbhl .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#wgroahpbhl .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#wgroahpbhl .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#wgroahpbhl .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#wgroahpbhl .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#wgroahpbhl .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#wgroahpbhl .gt_spanner_row {
  border-bottom-style: hidden;
}

#wgroahpbhl .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#wgroahpbhl .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#wgroahpbhl .gt_from_md > :first-child {
  margin-top: 0;
}

#wgroahpbhl .gt_from_md > :last-child {
  margin-bottom: 0;
}

#wgroahpbhl .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#wgroahpbhl .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#wgroahpbhl .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#wgroahpbhl .gt_row_group_first td {
  border-top-width: 2px;
}

#wgroahpbhl .gt_row_group_first th {
  border-top-width: 2px;
}

#wgroahpbhl .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#wgroahpbhl .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#wgroahpbhl .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#wgroahpbhl .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wgroahpbhl .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#wgroahpbhl .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#wgroahpbhl .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#wgroahpbhl .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#wgroahpbhl .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wgroahpbhl .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#wgroahpbhl .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#wgroahpbhl .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#wgroahpbhl .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#wgroahpbhl .gt_left {
  text-align: left;
}

#wgroahpbhl .gt_center {
  text-align: center;
}

#wgroahpbhl .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#wgroahpbhl .gt_font_normal {
  font-weight: normal;
}

#wgroahpbhl .gt_font_bold {
  font-weight: bold;
}

#wgroahpbhl .gt_font_italic {
  font-style: italic;
}

#wgroahpbhl .gt_super {
  font-size: 65%;
}

#wgroahpbhl .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#wgroahpbhl .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#wgroahpbhl .gt_indent_1 {
  text-indent: 5px;
}

#wgroahpbhl .gt_indent_2 {
  text-indent: 10px;
}

#wgroahpbhl .gt_indent_3 {
  text-indent: 15px;
}

#wgroahpbhl .gt_indent_4 {
  text-indent: 20px;
}

#wgroahpbhl .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="gt_col_headings header">
<th id="part" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="font-weight: bold" scope="col">part</th>
<th id="start" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="font-weight: bold" scope="col">start</th>
<th id="end" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="font-weight: bold" scope="col">end</th>
<th id="quote" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="font-weight: bold" scope="col">quote</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="part">part5</td>
<td class="gt_row gt_right" headers="start">14893</td>
<td class="gt_row gt_right" headers="end">14905</td>
<td class="gt_row gt_left" headers="quote">"inefficient"</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="part">part5</td>
<td class="gt_row gt_right" headers="start">16002</td>
<td class="gt_row gt_right" headers="end">16132</td>
<td class="gt_row gt_left" headers="quote">"I can hunch over my computer screen for half the day churning frenetically through emails without getting much of substance done,"</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="part">part5</td>
<td class="gt_row gt_right" headers="start">16186</td>
<td class="gt_row gt_right" headers="end">16336</td>
<td class="gt_row gt_left" headers="quote">"all the while telling myself what a loser I am, and leave at 6:00 p.m. feeling like I put in a full day. And given my level of mental fatigue, I did!"</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<section id="merging-quotes" class="level3">
<h3 class="anchored" data-anchor-id="merging-quotes">Merging Quotes</h3>
<p>The issue of quotes being split arises not because of a bug in code, but because the author writes in this way. She would do something like:</p>
<blockquote class="blockquote">
<p>“A palm tree”, somebody said, “belongs to the Plant Kingdom.”</p>
</blockquote>
<p>These stylistic choices will modify the statistics for the direct quotes (e.g., the average length of a quote will be much lesser than if these quotes were kept verbatim). I decided that I want to merge quotes if they are too close to each other (I will try 100 characters<sup>2</sup>). This will slightly inflate my % counts, since I’m attributing characters that are not direct quotes to actual quotes. Thus, when I calculate percentages, I will do so without merging (see <span class="citation" data-cites="percentages-with-no-merging">@percentages-with-no-merging</span>).</p>
<p>There’s one neat trick using <code>lag</code> and <code>cumsum</code> with a condition to achieve conditional grouping. We can see that rows 9 and 10 are marked as belonging to the same group now 🎉.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">threshold <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define your threshold</span></span>
<span id="cb6-2"></span>
<span id="cb6-3">merged_quotes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> match_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb6-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> part, </span>
<span id="cb6-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prev_end =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(end),</span>
<span id="cb6-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distance =</span> start <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> prev_end,</span>
<span id="cb6-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">merge_group =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(distance) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> distance <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> threshold, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb6-9">  ) </span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb6-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(merged_quotes, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 × 6
   part  start   end prev_end distance merge_group
   &lt;chr&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;    &lt;int&gt;       &lt;dbl&gt;
 1 part5   574   597       NA       NA           1
 2 part5  1342  1361      597      745           2
 3 part5  1876  1904     1361      515           3
 4 part5  6036  6051     1904     4132           4
 5 part5  8751  8944     6051     2700           5
 6 part5  9276  9373     8944      332           6
 7 part5 13258 13265     9373     3885           7
 8 part5 14893 14905    13265     1628           8
 9 part5 16002 16132    14905     1097           9
10 part5 16186 16336    16132       54           9</code></pre>
</div>
</div>
<p>This intermediate step also gives us the answer to a new question:</p>
<blockquote class="blockquote">
<p>What is the average distance between quotes?</p>
</blockquote>
<p>The answer is x̄= 740 ± sd = 970 . On average, you start a new qoute after 130 words of original content. Is that a lot? Is that too little?</p>
<p>To be honest, it feels true to the reading experience. My sensation was that the author was using the verbatim quotes with high frequency, and the data seems to align with that. But don’t take my word for it, let’s try to visualize it.</p>
<p>We are two steps away from the viz.</p>
<ol type="1">
<li>Do the actual merge</li>
<li>Add the end of each chapter</li>
</ol>
<p>We can do <code>Step 1</code> using the code below:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">merged_quotes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> merged_quotes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(</span>
<span id="cb8-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(merge_group, part),</span>
<span id="cb8-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">first</span>(part),</span>
<span id="cb8-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">first</span>(start),</span>
<span id="cb8-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">end =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">last</span>(end)</span>
<span id="cb8-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the lag again to see where the original text starts</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text_start =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(end, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">default =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> part)</span></code></pre></div>
</details>
</div>
<p>Right now, we have the start of the original text in <code>text_start</code> and the <code>start</code> and <code>end</code> of each verbatim quote. We need to make use of the metadata stored in <code>meta</code> to add the end of the original content for of each chapter. This only matters for the very last portion that we are going to plot, so I will make a new data set that contains those values instead of merging everything together. To visualize it, I’m going to make use of a package I developed called <code>ggethos</code>. You can check it out <a href="https://matiasandina.github.io/ggethos/">here</a> or adapt the code to work with <code>geom_segment()</code>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pad parts  for plotting</span></span>
<span id="cb9-2">format_part <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(part_name) {</span>
<span id="cb9-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the numeric part</span></span>
<span id="cb9-4">  part_number <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_extract</span>(part_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d+"</span>))</span>
<span id="cb9-5"></span>
<span id="cb9-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pad the number with zeros and prepend 'part'</span></span>
<span id="cb9-7">  formatted_part <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"part"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_pad</span>(part_number, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pad =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>))</span>
<span id="cb9-8">  </span>
<span id="cb9-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(formatted_part)</span>
<span id="cb9-10">}</span>
<span id="cb9-11"></span>
<span id="cb9-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make tail end segments</span></span>
<span id="cb9-13">tail_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> merged_quotes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> part, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">last_quote_end =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(end)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(meta, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'part'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fix the padding after merging</span></span>
<span id="cb9-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format_part</span>(part))</span>
<span id="cb9-18"></span>
<span id="cb9-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fix the padding here too</span></span>
<span id="cb9-20">merged_quotes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> merged_quotes  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format_part</span>(part))</span>
<span id="cb9-21"></span>
<span id="cb9-22"></span>
<span id="cb9-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>merged_quotes) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ethogram</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>text_start, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend=</span>start, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> part), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray30"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ethogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>tail_data, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>last_quote_end, </span>
<span id="cb9-26">                                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend=</span>nchar, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> part), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray30"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ethogram</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>start, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend=</span>end, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> part), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-28">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_nothing</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"'Do Nothing' is Peppered by Quotes"</span>,</span>
<span id="cb9-30">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;span style = 'color:gray30'&gt;Original Text&lt;/span&gt; and &lt;span style = 'color:red'&gt;Verbatim quotes&lt;/span&gt;"</span>,</span>
<span id="cb9-31">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Viz: Matias Andina"</span>,</span>
<span id="cb9-32">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chapter"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb9-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb9-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.subtitle =</span> ggtext<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_markdown</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb9-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>),</span>
<span id="cb9-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gray80'</span>),</span>
<span id="cb9-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>),</span>
<span id="cb9-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.caption =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-11-07-original-text/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I believe this plot conveys a good mental image of what reading the book feels like in terms of verbatim text usage.</p>
</section>
<section id="percentages-with-no-merges" class="level3">
<h3 class="anchored" data-anchor-id="percentages-with-no-merges">Percentages with no merges</h3>
<p>As mentioned in the beginning of the article, I was curious about <em>how much</em> verbatim text there was. Again, using the number of characters in each chapter stored in the <code>meta</code> object, we can easily calculate the percentage of all characters that are directly quoted:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">match_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote_chars =</span> end <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> part, </span>
<span id="cb10-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote_chars =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(quote_chars)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(meta, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"part"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote_frac =</span> quote_chars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> nchar,</span>
<span id="cb10-7">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(part, quote_frac)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(quote_frac)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(part), quote_frac), </span>
<span id="cb10-11">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkred"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_label</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">15.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.17</span>,</span>
<span id="cb10-13">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(part[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which.max</span>(quote_frac)],</span>
<span id="cb10-14">                               scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(quote_frac)),</span>
<span id="cb10-15">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-16">                 ))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_percent</span>(),</span>
<span id="cb10-18">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expansion</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Verbatim Quotes"</span>,</span>
<span id="cb10-20">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Book Part</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(ascending quote % order)"</span>,</span>
<span id="cb10-21">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"'Do Nothing' contains ~10% verbatim quoted text"</span>,</span>
<span id="cb10-22">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Some parts are as high as 17%!"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-23">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal_hgrid</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-11-07-original-text/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="a-silver-lining" class="level2">
<h2 class="anchored" data-anchor-id="a-silver-lining">A silver lining</h2>
<p>Most non-fiction books are a regurgitation of something somebody else said a long time ago (there’s nothing new under the sun). In a sense then, it’s more truthful for an author to quote verbatim from the original source than to paraphrase whatever they took out of it and hide the initial message under a footnote<sup>3</sup>.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>But I’m sure a copyright lawyer would know much more than I do regarding how much verbatim text you can include and still claim ownership of your work.↩︎</p></li>
<li id="fn2"><p>Of course, this threshold is arbitrary. How did I come up with it? I asked ChatGPT to come up with 10 interjections that were a bit longer than “they said” and phrases where sitting comfortably around 50. I doubled it to be super sure that we were not missing instances.↩︎</p></li>
<li id="fn3"><p>This paragraph was indeed a paraphrase of my editor’s (read wife’s) reaction to my article. Talking to her is a great exercise in positive reframing.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2023,
  author = {Andina, Matias},
  title = {Original {Text}},
  date = {2023-11-07},
  url = {https://matiasandina.netlify.app/posts/2023-11-07-original-text/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2023" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2023. <span>“Original Text.”</span> November 7, 2023. <a href="https://matiasandina.netlify.app/posts/2023-11-07-original-text/">https://matiasandina.netlify.app/posts/2023-11-07-original-text/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <guid>https://matiasandina.netlify.app/posts/2023-11-07-original-text/</guid>
  <pubDate>Tue, 07 Nov 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>The Power to Normalize</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2023-08-19-the-power-to-normalize/</link>
  <description><![CDATA[ 





<p>I started participating in the <a href="https://github.com/rfordatascience/tidytuesday">Tidytuesday project</a> to practice my visualization skills, while using datasets that come from sources that I’m not used to. In addition, I enjoy checking what <em>other</em> people do with the same dataset. I find that others are way more creative than I am, and I borrow heavily!</p>
<p>The challenge for Week 33 of 2023 was to perform viz on the <code>spam</code> dataset.</p>
<section id="when-pca-fails" class="level2">
<h2 class="anchored" data-anchor-id="when-pca-fails">When PCA fails</h2>
<p>The <code>spam</code> dataset presents heavily skewed distributions for variables that serve as predictors of spam email. Because it was a dataset with 6 numeric variables and a single binary predictor, my initial idea was to perform a quick and dirty PCA.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warn.conflicts =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidytuesdayR)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paletteer)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(FactoMineR)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(factoextra)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warn.conflicts =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load the data</span></span>
<span id="cb1-9">spam <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tt_load</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2023</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">week=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>spam</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
    Downloading file 1 of 1: `spam.csv`</code></pre>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">spam<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>yesno <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(spam<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>yesno <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spam"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>)</span>
<span id="cb3-2">pc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prcomp</span>(spam[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">center =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale. =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make it a tibble for ggplot plotting</span></span>
<span id="cb3-4">pc_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span>
<span id="cb3-5">pc_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>yesno <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> spam<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>yesno</span>
<span id="cb3-6"></span>
<span id="cb3-7">pc_ori_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(pc_data, </span>
<span id="cb3-8">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(PC1, PC2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> yesno)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_paletteer_d</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"awtools::a_palette"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-12">  ggthemes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_base</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb3-14">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb3-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>),</span>
<span id="cb3-16">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>),</span>
<span id="cb3-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#81AE5C"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span>
<span id="cb3-19">pc_ori_plot</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-08-19-the-power-to-normalize/index_files/figure-html/setup-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>If you are inclined to do so, you can check that <code>fviz_screeplot(pc)</code> gives you a horrible scree plot with very little variance explained and use <code>fviz_pca_contrib(pc, choice = 'var')</code> to check that the contributions of the different variables are also close to random.</p>
</section>
<section id="skewed-data-distributions" class="level2">
<h2 class="anchored" data-anchor-id="skewed-data-distributions">Skewed Data Distributions</h2>
<p>The vanilla PCA does nothing to help us visualize a separation between the. Why is that the case?</p>
<p>Upon a closer inspection of the regular variables, which I should have done before diving into the PCA, we see that we are dealing with heavily skewed distributions</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">spam <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>yesno) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(yesno, value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> yesno)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_violin</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale_cut =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut_short_scale</span>()))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_paletteer_d</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"awtools::a_palette"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-8">  ggthemes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_base</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb4-10">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb4-11">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>),</span>
<span id="cb4-12">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>),</span>
<span id="cb4-13">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#81AE5C"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-08-19-the-power-to-normalize/index_files/figure-html/skewed-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The distributions are so skewed we can barely see them.</p>
</section>
<section id="transform" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="transform">Transform</h2>
<p>Enter the <a href="https://en.wikipedia.org/wiki/Power_transform#Yeo%E2%80%93Johnson_transformation">Yeo–Johnson transformation</a>, a type of Power Transform<sup>1</sup> that will come handy to normalize the data.</p>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">As a side note, I had a bit of trouble running this using the more conventional <code>caret</code> or <code>recipes</code> packages, you can read my StackOverflow question <a href="https://stackoverflow.com/questions/76925607/understanding-yeojohnson-transformation-in-r/76933102#76933102">here</a> and the nice answer about estimating parameters properly. For this post, I will be using <code>bestNormalize::yeojohnson</code> to normalize all columns in the dataset.</span></div></div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># quickly apply transformation to the data itself</span></span>
<span id="cb5-2">df_transformed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(spam, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">where</span>(is.numeric)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_all</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.funs =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(bestNormalize<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">yeojohnson</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> x))</span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check the new distributions</span></span>
<span id="cb5-5">df_transformed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>yesno <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> spam<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>yesno</span>
<span id="cb5-6">df_transformed <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>yesno) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(yesno, value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> yesno)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_violin</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale_cut =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut_short_scale</span>()))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_paletteer_d</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"awtools::a_palette"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-13">  ggthemes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_base</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb5-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb5-16">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>),</span>
<span id="cb5-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>),</span>
<span id="cb5-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#81AE5C"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-08-19-the-power-to-normalize/index_files/figure-html/violin-transformed-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I am not a huge fan of data transformations, but that is a very nice transformation. We often deal with skewed data, which produces difficulties when visualizing and performing data analysis. Having a tool like this power transform comes really handy<sup>2</sup>.</p>
</section>
<section id="second-pca" class="level2">
<h2 class="anchored" data-anchor-id="second-pca">Second PCA</h2>
<p>We can now check how the second PCA looks like. It’s not a panacea, but we have made large improvements. Check the side by side comparisons:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">pc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prcomp</span>(df_transformed[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>])</span>
<span id="cb6-2">pc_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span>
<span id="cb6-3">pc_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>yesno <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> spam<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>yesno</span>
<span id="cb6-4"></span>
<span id="cb6-5">pc_second_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(pc_data, </span>
<span id="cb6-6">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(PC1, PC2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> yesno)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_paletteer_d</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"awtools::a_palette"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-10">  ggthemes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_base</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb6-12">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb6-13">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>),</span>
<span id="cb6-14">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>),</span>
<span id="cb6-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#81AE5C"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span>
<span id="cb6-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb6-18">pc_ori_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pc_second_plot</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-08-19-the-power-to-normalize/index_files/figure-html/second-pca-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>In terms of separating data, the second PCA is not the best PCA in the world. We can still see that there is a bunch of points all clustered together:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(pc_data, </span>
<span id="cb7-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(PC1, PC2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> yesno)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gray50'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"All Data"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-6">  ggthemes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_few</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ubuntu"</span>)</span>
<span id="cb7-7">spam_color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> paletteer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paletteer_d</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"awtools::a_palette"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb7-8">email_color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> paletteer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paletteer_d</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"awtools::a_palette"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb7-9">p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(pc_data, </span>
<span id="cb7-10">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(PC1, PC2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> yesno)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gray50'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pc_data, yesno<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spam"</span>),</span>
<span id="cb7-13">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> spam_color, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spam"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-16">  ggthemes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_few</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ubuntu"</span>)</span>
<span id="cb7-17">p3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(pc_data, </span>
<span id="cb7-18">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(PC1, PC2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> yesno)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gray50'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pc_data, yesno<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>),</span>
<span id="cb7-21">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> email_color, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Emails"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-24">  ggthemes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_few</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ubuntu"</span>)</span>
<span id="cb7-25">p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p3</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-08-19-the-power-to-normalize/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>However, I encourage you to check <code>fviz_screeplot(pc)</code> to see how dramatically better this second PCA is.</p>
</section>
<section id="ending-remarks" class="level2">
<h2 class="anchored" data-anchor-id="ending-remarks">Ending remarks</h2>
<p>Regardless of the final separation that we could achieve in this particular dataset, the normalization performed using Yeo–Johnson transform was quite powerful. You have been given the Power to Normalize, I hope you try it on your own skewed datasets!</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Yes, the title of this post is 100% pun intended.↩︎</p></li>
<li id="fn2"><p>The devil is on the details. Always check the parameters and be careful on data interpretation when transforming your data!↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2023,
  author = {Andina, Matias},
  title = {The {Power} to {Normalize}},
  date = {2023-08-19},
  url = {https://matiasandina.netlify.app/posts/2023-08-19-the-power-to-normalize/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2023" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2023. <span>“The Power to Normalize.”</span> August 19,
2023. <a href="https://matiasandina.netlify.app/posts/2023-08-19-the-power-to-normalize/">https://matiasandina.netlify.app/posts/2023-08-19-the-power-to-normalize/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>dataviz</category>
  <guid>https://matiasandina.netlify.app/posts/2023-08-19-the-power-to-normalize/</guid>
  <pubDate>Fri, 18 Aug 2023 23:00:00 GMT</pubDate>
</item>
<item>
  <title>goodreads</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2023-06-10-goodreads/</link>
  <description><![CDATA[ 





<section id="a-challenging-new-year" class="level2">
<h2 class="anchored" data-anchor-id="a-challenging-new-year">A Challenging New Year</h2>
<p>Around early January 2023, an idea came to my mind: the books I read were all written men. My initial guess was 90% male. That’s bad, I know. So I decided to do two things:</p>
<ol type="1">
<li>Check my current ratio</li>
<li>Whatever my current number was, make the effort to read more women authors.</li>
</ol>
<p>As a bonus point, I would get to toy with the data (yay 🙌). If you have no interest in checking the dataviz analysis you can jump right into the gender ratios.</p>
</section>
<section id="fetch-data" class="level2">
<h2 class="anchored" data-anchor-id="fetch-data">Fetch Data</h2>
<p>I use <a href="https://www.goodreads.com/">goodreads</a> to store info about the books I read or those that I am about to read. It turns out that goodreads lets you export your library (go <a href="https://www.goodreads.com/review/import">here</a>).</p>
<section id="disclaimer" class="level3">
<h3 class="anchored" data-anchor-id="disclaimer">Disclaimer</h3>
<p>It’s not the cleanest data:</p>
<ul>
<li>Ranking is in whole point increments from 1 to 5, which somewhat constrains what the average values for books might be[^people-read].</li>
<li>The number of pages might be wrong (some titles have 0 pages)</li>
<li>The year of publishing might obscure the real year of writing (multiple editions obscure this more)</li>
<li>Unfortunately I don’t have good info on the days it took for me to read the book because I enter whatever ‘feels close enough’ by hand.</li>
</ul>
<p>[^people-read]: People tend to read “good books”, so it’s expected that this average is skewed towards higher values, but see my other comments in the analysis.</p>
</section>
</section>
<section id="data-cleaning" class="level2">
<h2 class="anchored" data-anchor-id="data-cleaning">Data Cleaning</h2>
<p>Data comes mostly clean and can be imported into R (or any language of your choice).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ubuntu"</span>)))</span>
<span id="cb1-3"></span>
<span id="cb1-4">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mla_goodreads_library_export.csv"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_col_types =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-5">  janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove books I haven't read or rated</span></span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(my_rating <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create subtitle, might not be inclusive but probably pretty good</span></span>
<span id="cb1-10">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a copy</span></span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ori_title =</span> title) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">separate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>,</span>
<span id="cb1-14">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">into =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"subtitle"</span>), </span>
<span id="cb1-15">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">": "</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="peoples-ratings-are-super-high" class="level2">
<h2 class="anchored" data-anchor-id="peoples-ratings-are-super-high">People’s Ratings are Super High</h2>
<p>The average rating for books is pretty high. Even for those at the very bottom.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">stars_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb2-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), </span>
<span id="cb2-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)))</span>
<span id="cb2-4">stars_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stars_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb2-5"></span>
<span id="cb2-6">label_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>,</span>
<span id="cb2-7">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,</span>
<span id="cb2-8">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"didn't like it"</span> , </span>
<span id="cb2-9">                                 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"it was OK"</span>, </span>
<span id="cb2-10">                                 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"liked it"</span>, </span>
<span id="cb2-11">                                 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"really liked it"</span>, </span>
<span id="cb2-12">                                 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"it was amazing"</span>))</span>
<span id="cb2-13">                       </span>
<span id="cb2-14">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>L, average_rating)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-16">  ggbeeswarm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_quasirandom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#xlim(0,2) +</span></span>
<span id="cb2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> stars_df, </span>
<span id="cb2-20">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, y),</span>
<span id="cb2-21">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"★"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gold"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> label_df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span>label)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray50"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb2-25">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb2-26">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.subtitle =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"goodgeads readers 'really like' most books"</span>,</span>
<span id="cb2-28">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Each dot is the average community rating of a book"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-06-10-goodreads/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I think there are a few things happening here:</p>
<ol type="1">
<li>People are way more optimistic and less critic than I am (no surprise)</li>
<li>People who really don’t like a book stop reading it early and might not bother rating it <sup>1</sup>. Hence, there’s a sort of ‘survivor bias’ in the data.</li>
<li>People just don’t care about GoodRead’s rating and do their own versions which might have nothing to do with the 5 stars system .</li>
<li>Maybe I just happen to read “mostly good books”, so I would not find any book with very little rating.</li>
</ol>
<p>Just to point out the comparison with my own ratings.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">delta =</span> my_rating <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> average_rating,</span>
<span id="cb3-3">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()), delta)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> delta, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> delta)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, </span>
<span id="cb3-6">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Books I liked</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">more than the</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">average person"</span>,</span>
<span id="cb3-7">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb3-9">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Books I liked</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">less than the</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">average person"</span>,</span>
<span id="cb3-10">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-11">  ggbeeswarm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_quasirandom</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_gradient</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>, </span>
<span id="cb3-16">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>),</span>
<span id="cb3-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-19">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-20">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.line.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-21">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-22">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-24">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rating Difference"</span>,</span>
<span id="cb3-25">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Differences in Ratings"</span>,</span>
<span id="cb3-26">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Difference  between my and people's ratings"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-06-10-goodreads/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="top-and-bottom" class="level2">
<h2 class="anchored" data-anchor-id="top-and-bottom">Top and Bottom</h2>
<p>This analysis couldn’t continue without giving you the gossip of who’s at the top and bottom in my dataset. Mind you, these are the people’s ratings for the books I have read.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(average_rating)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(title, author, average_rating) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-5">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 books in dataset"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-6">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cols_label</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Title"</span>,</span>
<span id="cb4-7">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">author =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Author"</span>,</span>
<span id="cb4-8">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">average_rating =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average Rating"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="uivvhklbul" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#uivvhklbul table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#uivvhklbul thead, #uivvhklbul tbody, #uivvhklbul tfoot, #uivvhklbul tr, #uivvhklbul td, #uivvhklbul th {
  border-style: none;
}

#uivvhklbul p {
  margin: 0;
  padding: 0;
}

#uivvhklbul .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#uivvhklbul .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#uivvhklbul .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#uivvhklbul .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#uivvhklbul .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#uivvhklbul .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uivvhklbul .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#uivvhklbul .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#uivvhklbul .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#uivvhklbul .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#uivvhklbul .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#uivvhklbul .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#uivvhklbul .gt_spanner_row {
  border-bottom-style: hidden;
}

#uivvhklbul .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#uivvhklbul .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#uivvhklbul .gt_from_md > :first-child {
  margin-top: 0;
}

#uivvhklbul .gt_from_md > :last-child {
  margin-bottom: 0;
}

#uivvhklbul .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#uivvhklbul .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#uivvhklbul .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#uivvhklbul .gt_row_group_first td {
  border-top-width: 2px;
}

#uivvhklbul .gt_row_group_first th {
  border-top-width: 2px;
}

#uivvhklbul .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#uivvhklbul .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#uivvhklbul .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#uivvhklbul .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uivvhklbul .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#uivvhklbul .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#uivvhklbul .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#uivvhklbul .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#uivvhklbul .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uivvhklbul .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#uivvhklbul .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#uivvhklbul .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#uivvhklbul .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#uivvhklbul .gt_left {
  text-align: left;
}

#uivvhklbul .gt_center {
  text-align: center;
}

#uivvhklbul .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#uivvhklbul .gt_font_normal {
  font-weight: normal;
}

#uivvhklbul .gt_font_bold {
  font-weight: bold;
}

#uivvhklbul .gt_font_italic {
  font-style: italic;
}

#uivvhklbul .gt_super {
  font-size: 65%;
}

#uivvhklbul .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#uivvhklbul .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#uivvhklbul .gt_indent_1 {
  text-indent: 5px;
}

#uivvhklbul .gt_indent_2 {
  text-indent: 10px;
}

#uivvhklbul .gt_indent_3 {
  text-indent: 15px;
}

#uivvhklbul .gt_indent_4 {
  text-indent: 20px;
}

#uivvhklbul .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<caption>Top 10 books in dataset</caption>
<thead>
<tr class="gt_col_headings header">
<th id="Title" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">Title</th>
<th id="Author" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">Author</th>
<th id="Average Rating" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Average Rating</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="title">I Am Number Four Collection</td>
<td class="gt_row gt_left" headers="author">Pittacus Lore</td>
<td class="gt_row gt_right" headers="average_rating">4.55</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="title">I'm Glad My Mom Died</td>
<td class="gt_row gt_left" headers="author">Jennette McCurdy</td>
<td class="gt_row gt_right" headers="average_rating">4.49</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="title">The Storyteller</td>
<td class="gt_row gt_left" headers="author">Dave Grohl</td>
<td class="gt_row gt_right" headers="average_rating">4.49</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="title">The Price We Pay</td>
<td class="gt_row gt_left" headers="author">Marty Makary</td>
<td class="gt_row gt_right" headers="average_rating">4.48</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="title">The Winners (Beartown, #3)</td>
<td class="gt_row gt_left" headers="author">Fredrik Backman</td>
<td class="gt_row gt_right" headers="average_rating">4.47</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="title">Educated</td>
<td class="gt_row gt_left" headers="author">Tara Westover</td>
<td class="gt_row gt_right" headers="average_rating">4.47</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="title">Story of Your Life</td>
<td class="gt_row gt_left" headers="author">Ted Chiang</td>
<td class="gt_row gt_right" headers="average_rating">4.47</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="title">Harry Potter and the Sorcerer's Stone (Harry Potter, #1)</td>
<td class="gt_row gt_left" headers="author">J.K. Rowling</td>
<td class="gt_row gt_right" headers="average_rating">4.47</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="title">A Civic Technologist's Practice Guide</td>
<td class="gt_row gt_left" headers="author">Cyd Harrell</td>
<td class="gt_row gt_right" headers="average_rating">4.45</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="title">Ali</td>
<td class="gt_row gt_left" headers="author">Jonathan Eig</td>
<td class="gt_row gt_right" headers="average_rating">4.44</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Here’s the bottom of the pile</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(average_rating) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(title, author, average_rating) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(average_rating)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-6">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bottom 10 books in dataset"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-7">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cols_label</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Title"</span>,</span>
<span id="cb5-8">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">author =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Author"</span>,</span>
<span id="cb5-9">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">average_rating =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average Rating"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="ogpeyalkld" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#ogpeyalkld table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#ogpeyalkld thead, #ogpeyalkld tbody, #ogpeyalkld tfoot, #ogpeyalkld tr, #ogpeyalkld td, #ogpeyalkld th {
  border-style: none;
}

#ogpeyalkld p {
  margin: 0;
  padding: 0;
}

#ogpeyalkld .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ogpeyalkld .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#ogpeyalkld .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ogpeyalkld .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ogpeyalkld .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ogpeyalkld .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ogpeyalkld .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ogpeyalkld .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ogpeyalkld .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ogpeyalkld .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ogpeyalkld .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ogpeyalkld .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ogpeyalkld .gt_spanner_row {
  border-bottom-style: hidden;
}

#ogpeyalkld .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#ogpeyalkld .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ogpeyalkld .gt_from_md > :first-child {
  margin-top: 0;
}

#ogpeyalkld .gt_from_md > :last-child {
  margin-bottom: 0;
}

#ogpeyalkld .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ogpeyalkld .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#ogpeyalkld .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#ogpeyalkld .gt_row_group_first td {
  border-top-width: 2px;
}

#ogpeyalkld .gt_row_group_first th {
  border-top-width: 2px;
}

#ogpeyalkld .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ogpeyalkld .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#ogpeyalkld .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#ogpeyalkld .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ogpeyalkld .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ogpeyalkld .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ogpeyalkld .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#ogpeyalkld .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ogpeyalkld .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ogpeyalkld .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ogpeyalkld .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ogpeyalkld .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ogpeyalkld .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ogpeyalkld .gt_left {
  text-align: left;
}

#ogpeyalkld .gt_center {
  text-align: center;
}

#ogpeyalkld .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ogpeyalkld .gt_font_normal {
  font-weight: normal;
}

#ogpeyalkld .gt_font_bold {
  font-weight: bold;
}

#ogpeyalkld .gt_font_italic {
  font-style: italic;
}

#ogpeyalkld .gt_super {
  font-size: 65%;
}

#ogpeyalkld .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#ogpeyalkld .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#ogpeyalkld .gt_indent_1 {
  text-indent: 5px;
}

#ogpeyalkld .gt_indent_2 {
  text-indent: 10px;
}

#ogpeyalkld .gt_indent_3 {
  text-indent: 15px;
}

#ogpeyalkld .gt_indent_4 {
  text-indent: 20px;
}

#ogpeyalkld .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<caption>Bottom 10 books in dataset</caption>
<thead>
<tr class="gt_col_headings header">
<th id="Title" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">Title</th>
<th id="Author" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">Author</th>
<th id="Average Rating" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Average Rating</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="title">Kurashi at Home</td>
<td class="gt_row gt_left" headers="author">Marie Kondō</td>
<td class="gt_row gt_right" headers="average_rating">3.59</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="title">Randomize</td>
<td class="gt_row gt_left" headers="author">Andy Weir</td>
<td class="gt_row gt_right" headers="average_rating">3.52</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="title">How to Win Every Argument</td>
<td class="gt_row gt_left" headers="author">Madsen Pirie</td>
<td class="gt_row gt_right" headers="average_rating">3.52</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="title">Subtract</td>
<td class="gt_row gt_left" headers="author">Leidy Klotz</td>
<td class="gt_row gt_right" headers="average_rating">3.51</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="title">The Year of Less</td>
<td class="gt_row gt_left" headers="author">Cait Flanders</td>
<td class="gt_row gt_right" headers="average_rating">3.48</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="title">You Have Arrived at Your Destination</td>
<td class="gt_row gt_left" headers="author">Amor Towles</td>
<td class="gt_row gt_right" headers="average_rating">3.48</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="title">Make, Think, Imagine</td>
<td class="gt_row gt_left" headers="author">John Browne</td>
<td class="gt_row gt_right" headers="average_rating">3.48</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="title">Limetown</td>
<td class="gt_row gt_left" headers="author">Cote Smith</td>
<td class="gt_row gt_right" headers="average_rating">3.36</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="title">Hype</td>
<td class="gt_row gt_left" headers="author">Gabrielle Bluestone</td>
<td class="gt_row gt_right" headers="average_rating">3.33</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="title">The Listening Path</td>
<td class="gt_row gt_left" headers="author">Julia Cameron</td>
<td class="gt_row gt_right" headers="average_rating">3.29</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="searching-for-my-type" class="level2">
<h2 class="anchored" data-anchor-id="searching-for-my-type">Searching for my type</h2>
<p>I was curious to see whether there authors that I should be reading more of, so I averaged all my ratings for each author.</p>
<p>Ranked data doesn’t show very nicely when you try to do a simple correlation plot, but we can just check it out.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># How off am I from the average rating for each author?</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># looks like 3 stars is a breaking point</span></span>
<span id="cb6-3">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(author) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), </span>
<span id="cb6-6">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">my_rating =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(my_rating),</span>
<span id="cb6-7">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">people_rating =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(average_rating)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(my_rating, people_rating)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_linedraw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My Rating for an Author"</span>,</span>
<span id="cb6-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"People's Rating an Author"</span>,</span>
<span id="cb6-13">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is there more agreement at the author level?"</span>,</span>
<span id="cb6-14">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"There seems to be a breakpoint at 4"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-06-10-goodreads/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="as-years-go-by" class="level2">
<h2 class="anchored" data-anchor-id="as-years-go-by">As years go by</h2>
<p>I have been adding info to goodreads for a while now, so I wanted to check things in time. In terms of quality, it seems that 2016 and 2023 were very good reading years. 2020 was quite bad.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for some reason, </span></span>
<span id="cb7-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># date_read is na even though I did read them</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(my_rating <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fill with the date added, </span></span>
<span id="cb7-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># which should be close enough </span></span>
<span id="cb7-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (anyway the only thing we have)</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date_read =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(date_read), date_added, date_read)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(date_read) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">year</span>(date_read)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year_order =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(year_order, lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">year</span>(date_read), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(my_rating)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_tile</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-14">  paletteer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_paletteer_d</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NineteenEightyR::miami2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2015</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2023</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), </span>
<span id="cb7-17">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>),</span>
<span id="cb7-18">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expansion</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Books Read"</span>, </span>
<span id="cb7-20">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb7-21">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My Rating"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray4"</span>),</span>
<span id="cb7-23">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray4"</span>),</span>
<span id="cb7-24">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb7-25">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb7-26">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb7-27">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb7-28">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ratio =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-06-10-goodreads/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="whats-the-best-book-length-for-me" class="level2">
<h2 class="anchored" data-anchor-id="whats-the-best-book-length-for-me">What’s the best book length for me?</h2>
<p>One quick an easy thing to check is whether I enjoy longer or shorter books. There doesn’t seem to be much to see here, but the plot was nice and I decided to keep it.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">min_pages <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb8-2">max_pages <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb8-3"></span>
<span id="cb8-4">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">between</span>(number_of_pages, min_pages, max_pages)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>my_rating, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>number_of_pages)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> my_rating <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), </span>
<span id="cb8-9">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pointrange"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data=</span>mean_se) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#coord_flip() +</span></span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Do I prefer longer books?"</span>,</span>
<span id="cb8-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Showing books with more than {min_pages} and less than {max_pages} pages."</span>),</span>
<span id="cb8-13">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of Pages"</span>, </span>
<span id="cb8-14">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My Rating"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2023-06-10-goodreads/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="show-me-the-ratios" class="level2">
<h2 class="anchored" data-anchor-id="show-me-the-ratios">Show me the Ratios</h2>
<p>I promised to check the gender ratios. So I used the <code>gender</code> package to predict gender using the information in the author’s name. There’s a few caveats:</p>
<ul>
<li><p>The prediction might be dead wrong for many reasons. Author’s of the package acknowledge this right away, so I feel I shouldn’t repeat <a href="https://github.com/lmullen/gender#guidelines-and-warnings">this info</a>.</p></li>
<li><p>There are some authors that might fail to parse. Since this is a simple analysis, I didn’t want to delve too much on fixing things.</p></li>
<li><p>Some books are written by more than one author<sup>2</sup>. For simplicity’s sake, I’m going to go with the first author (I doubt it would change the ratio anyway). In goodreads’ database, we have an <code>author_l_f</code> column with only one person. So that’s what I am going to be using.</p></li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Before doing anything, only look at data from before 2023</span></span>
<span id="cb9-2">before2023 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(df, </span>
<span id="cb9-3">                     lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">year</span>(date_added) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2023</span>)</span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get distinct authors</span></span>
<span id="cb9-5">author_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(before2023<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>author_l_f)</span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># split last-first and get first</span></span>
<span id="cb9-7">author_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split</span>(author_names, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>), <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) x[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict</span></span>
<span id="cb9-9">gender_prediction <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gender<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gender</span>(author_names)</span></code></pre></div>
</details>
</div>
<p>The gender dataset looks like this</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">gender_prediction</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 117 × 6
   name   proportion_male proportion_female gender year_min year_max
   &lt;chr&gt;            &lt;dbl&gt;             &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;
 1 Adam            0.996             0.0041 male       1932     2012
 2 Alan            0.997             0.0032 male       1932     2012
 3 Alex            0.966             0.0343 male       1932     2012
 4 Allie           0.0396            0.960  female     1932     2012
 5 Amor            0.177             0.823  female     1932     2012
 6 Anand           1                 0      male       1932     2012
 7 Andrew          0.996             0.004  male       1932     2012
 8 Andy            0.988             0.0119 male       1932     2012
 9 Anne            0.0025            0.998  female     1932     2012
10 Annie           0.0053            0.995  female     1932     2012
# ℹ 107 more rows</code></pre>
</div>
</div>
<p>The ratio of predicted names is 0.71, which is not bad. There are some authors missing that failed to parse. For example, J.K. Rowling:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fails to parse, also no Joannes in data!</span></span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">any</span>(gender_prediction<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Joanne"</span>)</span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE</span></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># She was in the dataset as J.K.</span></span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">any</span>(author_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"J.K."</span>)</span>
<span id="cb12-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE</span></span></code></pre></div>
</div>
<p>To be honest, I am not worried about the parsing failures (it would take a long time to fix too…). If anything, it would make my male dominant dataset less male dominant. Let’s finally check this out.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">gender_prediction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(gender) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">percentage =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-4">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of Books by Gender before 2023"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="mqwjgsyamx" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#mqwjgsyamx table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#mqwjgsyamx thead, #mqwjgsyamx tbody, #mqwjgsyamx tfoot, #mqwjgsyamx tr, #mqwjgsyamx td, #mqwjgsyamx th {
  border-style: none;
}

#mqwjgsyamx p {
  margin: 0;
  padding: 0;
}

#mqwjgsyamx .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#mqwjgsyamx .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#mqwjgsyamx .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#mqwjgsyamx .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#mqwjgsyamx .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mqwjgsyamx .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mqwjgsyamx .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mqwjgsyamx .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#mqwjgsyamx .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#mqwjgsyamx .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#mqwjgsyamx .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#mqwjgsyamx .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#mqwjgsyamx .gt_spanner_row {
  border-bottom-style: hidden;
}

#mqwjgsyamx .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#mqwjgsyamx .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#mqwjgsyamx .gt_from_md > :first-child {
  margin-top: 0;
}

#mqwjgsyamx .gt_from_md > :last-child {
  margin-bottom: 0;
}

#mqwjgsyamx .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#mqwjgsyamx .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#mqwjgsyamx .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#mqwjgsyamx .gt_row_group_first td {
  border-top-width: 2px;
}

#mqwjgsyamx .gt_row_group_first th {
  border-top-width: 2px;
}

#mqwjgsyamx .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mqwjgsyamx .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#mqwjgsyamx .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#mqwjgsyamx .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mqwjgsyamx .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mqwjgsyamx .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#mqwjgsyamx .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#mqwjgsyamx .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#mqwjgsyamx .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mqwjgsyamx .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mqwjgsyamx .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#mqwjgsyamx .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mqwjgsyamx .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#mqwjgsyamx .gt_left {
  text-align: left;
}

#mqwjgsyamx .gt_center {
  text-align: center;
}

#mqwjgsyamx .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#mqwjgsyamx .gt_font_normal {
  font-weight: normal;
}

#mqwjgsyamx .gt_font_bold {
  font-weight: bold;
}

#mqwjgsyamx .gt_font_italic {
  font-style: italic;
}

#mqwjgsyamx .gt_super {
  font-size: 65%;
}

#mqwjgsyamx .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#mqwjgsyamx .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#mqwjgsyamx .gt_indent_1 {
  text-indent: 5px;
}

#mqwjgsyamx .gt_indent_2 {
  text-indent: 10px;
}

#mqwjgsyamx .gt_indent_3 {
  text-indent: 15px;
}

#mqwjgsyamx .gt_indent_4 {
  text-indent: 20px;
}

#mqwjgsyamx .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<caption>Number of Books by Gender before 2023</caption>
<thead>
<tr class="gt_col_headings header">
<th id="gender" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">gender</th>
<th id="n" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">n</th>
<th id="percentage" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">percentage</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="gender">female</td>
<td class="gt_row gt_right" headers="n">16</td>
<td class="gt_row gt_right" headers="percentage">13.7</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="gender">male</td>
<td class="gt_row gt_right" headers="n">101</td>
<td class="gt_row gt_right" headers="percentage">86.3</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>I was aiming for 10%, so 13.7% is right there. Again, this is bad. But let’s check this year.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2023 onwards</span></span>
<span id="cb14-2">after2023 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(df, lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">year</span>(date_added) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2023</span>)</span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get distinct authors</span></span>
<span id="cb14-4">author_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(after2023<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>author_l_f)</span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># split last-first and get first</span></span>
<span id="cb14-6">author_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split</span>(author_names, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>), <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) x[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict</span></span>
<span id="cb14-8">gender_prediction <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gender<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gender</span>(author_names)</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">gender_prediction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(gender) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">percentage =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-4">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of Books by Gender after 2023"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="ariblixedg" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#ariblixedg table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#ariblixedg thead, #ariblixedg tbody, #ariblixedg tfoot, #ariblixedg tr, #ariblixedg td, #ariblixedg th {
  border-style: none;
}

#ariblixedg p {
  margin: 0;
  padding: 0;
}

#ariblixedg .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ariblixedg .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#ariblixedg .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ariblixedg .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ariblixedg .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ariblixedg .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ariblixedg .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ariblixedg .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ariblixedg .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ariblixedg .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ariblixedg .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ariblixedg .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ariblixedg .gt_spanner_row {
  border-bottom-style: hidden;
}

#ariblixedg .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#ariblixedg .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ariblixedg .gt_from_md > :first-child {
  margin-top: 0;
}

#ariblixedg .gt_from_md > :last-child {
  margin-bottom: 0;
}

#ariblixedg .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ariblixedg .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#ariblixedg .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#ariblixedg .gt_row_group_first td {
  border-top-width: 2px;
}

#ariblixedg .gt_row_group_first th {
  border-top-width: 2px;
}

#ariblixedg .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ariblixedg .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#ariblixedg .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#ariblixedg .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ariblixedg .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ariblixedg .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ariblixedg .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#ariblixedg .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ariblixedg .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ariblixedg .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ariblixedg .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ariblixedg .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ariblixedg .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ariblixedg .gt_left {
  text-align: left;
}

#ariblixedg .gt_center {
  text-align: center;
}

#ariblixedg .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ariblixedg .gt_font_normal {
  font-weight: normal;
}

#ariblixedg .gt_font_bold {
  font-weight: bold;
}

#ariblixedg .gt_font_italic {
  font-style: italic;
}

#ariblixedg .gt_super {
  font-size: 65%;
}

#ariblixedg .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#ariblixedg .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#ariblixedg .gt_indent_1 {
  text-indent: 5px;
}

#ariblixedg .gt_indent_2 {
  text-indent: 10px;
}

#ariblixedg .gt_indent_3 {
  text-indent: 15px;
}

#ariblixedg .gt_indent_4 {
  text-indent: 20px;
}

#ariblixedg .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<caption>Number of Books by Gender after 2023</caption>
<thead>
<tr class="gt_col_headings header">
<th id="gender" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">gender</th>
<th id="n" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">n</th>
<th id="percentage" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">percentage</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="gender">female</td>
<td class="gt_row gt_right" headers="n">11</td>
<td class="gt_row gt_right" headers="percentage">42.3</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="gender">male</td>
<td class="gt_row gt_right" headers="n">15</td>
<td class="gt_row gt_right" headers="percentage">57.7</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>This is WAY better: 42.3%! Yes, I did have to search google for good titles written by women. And yes, I do have access to a bookworm at home who happens to be my wife and can recommend me great pieces of writing. The good news is that the bar to find content by women was really low. It didn’t require extra effort on my side to vastly improve my reading experience.</p>
<p>The reading experience is the most important thing. I was missing out on great work. I cannot help but wonder why it was so difficult for me to get exposed to these pieces.</p>
</section>
<section id="what-i-have-learnt" class="level2">
<h2 class="anchored" data-anchor-id="what-i-have-learnt">What I have learnt</h2>
<p>I confirmed my own bias (~10% of content written by women) and found ways to improve it (currently getting to 50% for 2023!).</p>
<p>I have found amazing books written by female authors this year. To name a few, I have read <a href="https://amzn.to/3Hhq6JP"><em>Educated</em></a>, <a href="https://amzn.to/47Gr1yw"><em>Infidel</em></a>, <a href="https://amzn.to/48TYpmn"><em>Tomorrow, and Tomorrow, and Tomorrow</em></a>, <a href="https://amzn.to/3NZUVq9"><em>I’m Glad My Mom Died</em></a>, and <a href="https://amzn.to/48xIcDo"><em>My year of meats</em></a>. All of them 5 stars! The lessons learned are outside the scope of this piece.</p>
<p>I am confident that there’s much else to learn from female voices. A huge world that I would never experience if I were to stay within my biased interpretation of reality. I hope to continue pushing for a higher women ratio. It’s not that I was actively trying to avoid reading women, but it’s quite telling that even these masterpieces didn’t make it to my reading list without me purposefully searching for “Good books by women” and the like.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I sometimes believe that it is unfair to rate a book you didn’t read. If I start a book and don’t like it, but having committed through it, I don’t rate it.↩︎</p></li>
<li id="fn2"><p>I am reading <a href="https://www.goodreads.com/book/show/10245602-poor-economics">Poor Economics</a> co-written by a man and a woman. This approach would remove Duflo from the analysis.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2023,
  author = {Andina, Matias},
  title = {Goodreads},
  date = {2023-08-06},
  url = {https://matiasandina.netlify.app/posts/2023-06-10-goodreads/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2023" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2023. <span>“Goodreads.”</span> August 6, 2023. <a href="https://matiasandina.netlify.app/posts/2023-06-10-goodreads/">https://matiasandina.netlify.app/posts/2023-06-10-goodreads/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>books</category>
  <guid>https://matiasandina.netlify.app/posts/2023-06-10-goodreads/</guid>
  <pubDate>Sat, 05 Aug 2023 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Lifeviz</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2021-01-16-lifeviz/</link>
  <description><![CDATA[ 





<p>I have not made new year resolutions, I made <a href="https://matiasandina.netlify.app/2021/01/art-in-a-new-year/">art</a>. I also finally got some time to explore one of the little Shiny projects that were dormant in my <code>/Project</code> folder during most of 2020: <strong>lifeviz</strong>.</p>
<p>The goal of <a href="https://matias-andina.shinyapps.io/lifeviz">lifeviz</a> is to visualize life events. This has been inspired by the post <a href="https://waitbutwhy.com/2015/12/the-tail-end.html">‘The Tail End’ by WaitButWhy</a>. I have taken the visualizations and added a few degrees of freedom, so that the users can visualize the past/present. On the activities tab, users can display the remaining activity counts for things they could represent using emojis.</p>
<p>This is an example of what it can do:</p>
<p><img src="https://raw.githubusercontent.com/matiasandina/lifeviz/main/example.gif" class="img-fluid"></p>
<p>You can find <a href="https://matias-andina.shinyapps.io/lifeviz">lifeviz here</a>.</p>
<section id="why-i-made-this" class="level3">
<h3 class="anchored" data-anchor-id="why-i-made-this">Why I made this</h3>
<p>The idea is to produce reflection and general introspection about our time on Earth. Actually visualizing the number of remaining days/burgers/hugs, can be a powerful tool to do so. Check <a href="https://matias-andina.shinyapps.io/lifeviz">lifeviz here</a>.</p>
<p>As I briefly mentioned, this app has been created using Shiny and R. I have left all the details out of this post, but you might be interested.</p>
<details>
<summary>
Show me the code
</summary>
<p>
You can check the code at https://github.com/matiasandina/lifeviz/
</p>
</details>
</section>
<section id="my-life" class="level3">
<h3 class="anchored" data-anchor-id="my-life">My life</h3>
<p>I have used the app to scratch my own itch, so this is my current status. If I live 90 years, these are the years past (gray), present (red) and left (unfilled).</p>
<p><img src="https://matiasandina.netlify.app/posts/2021-01-16-lifeviz/img/years.png" class="img-fluid"></p>
<p>I think this one is more actionable, gotta make those weeks count!</p>
<p><img src="https://matiasandina.netlify.app/posts/2021-01-16-lifeviz/img/weeks.png" class="img-fluid"></p>
</section>
<section id="activities" class="level3">
<h3 class="anchored" data-anchor-id="activities">Activities</h3>
<p>I try to meditate once a day<sup>1</sup>. If I do so for the rest of my life, that’s a hell lot of meditation.</p>
<p><img src="https://matiasandina.netlify.app/posts/2021-01-16-lifeviz/img/meditation.png" class="img-fluid"></p>
<p>On the weekends, I am almost certain to get something tasty, probably with a cappuccino ☕ and a book 📖. Let’s say I do this only once per weekend, let’s call it “Saturday Bakery Breakfast”</p>
<p><img src="https://matiasandina.netlify.app/posts/2021-01-16-lifeviz/img/bakery.png" class="img-fluid"></p>
</section>
<section id="the-goal" class="level3">
<h3 class="anchored" data-anchor-id="the-goal">The goal</h3>
<p>I hope using this app may help you appreciate the uniqueness of each of the moments we take for granted. I hope it makes you present, wherever, whenever you are. Enjoy.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>It’s an aspirational goal, maybe someday I will get there.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2021,
  author = {Andina, Matias},
  title = {Lifeviz},
  date = {2021-01-16},
  url = {https://matiasandina.netlify.app/posts/2021-01-16-lifeviz/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2021" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2021. <span>“Lifeviz.”</span> January 16, 2021. <a href="https://matiasandina.netlify.app/posts/2021-01-16-lifeviz/">https://matiasandina.netlify.app/posts/2021-01-16-lifeviz/</a>.
</div></div></section></div> ]]></description>
  <category>art</category>
  <category>R</category>
  <guid>https://matiasandina.netlify.app/posts/2021-01-16-lifeviz/</guid>
  <pubDate>Sat, 16 Jan 2021 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Rotating perspectives</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/</link>
  <description><![CDATA[ 





<p>I have been asked to unveil a bit of what’s under the hood on <a href="https://matiasandina.netlify.app/2021/01/art-in-a-new-year/">this post</a>. I decided to make a new post to share how my creative process took place and maybe inspire others to play along.</p>
<p>Something interesting about all of this is how well it plays into common sense. Looking at things from a different perspective, in this case adding just a rotation, can yield outstanding results.</p>
<section id="the-shapes" class="level3">
<h3 class="anchored" data-anchor-id="the-shapes">The shapes</h3>
<p>First of all, we are going to use the shapes provided by <code>ggforce::geom_regon()</code>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggforce)</span>
<span id="cb1-3"></span>
<span id="cb1-4">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span></span>
<span id="cb1-8">)</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_regon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> x0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> y0,</span>
<span id="cb1-12">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sides=</span> x0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb1-13">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray50"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Regular polygons using ggforce"</span>, </span>
<span id="cb1-16">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb1-17">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"@NeuroMLA"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-19">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-20">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-21">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/index_files/figure-html/show-shapes-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="the-twist" class="level3">
<h3 class="anchored" data-anchor-id="the-twist">The twist</h3>
<p>Now we can implement a rotation to each figure. We will use the previous <code>df</code> and <code>expand_grid()</code> to add an angle rotation to the regular polygon. The greater the number of sides, the closer we get to a circular shape illusion when we rotate and overlap the polygons. For <code>n&gt;6</code> it didn’t generate the type of look I was looking after during my experimentation.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>))</span>
<span id="cb2-2"></span>
<span id="cb2-3"> </span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># notice we use angle = angle now</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_regon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0=</span>x0,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0=</span>y0,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r=</span>r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sides=</span>x0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle=</span>angle),</span>
<span id="cb2-7">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray50"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rotated regular polygons using ggforce"</span>, </span>
<span id="cb2-10">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb2-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"@NeuroMLA"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-13">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-14">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), </span>
<span id="cb2-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/index_files/figure-html/rotations-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>We can tinker with the <code>alpha</code> and <code>fill</code> to make some nice looking shapes. I’m not going to modify <code>color</code> but it’s also a possibility.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># notice we use angle = angle now and fil=factor(x0)</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_regon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0=</span>x0,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0=</span>y0,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r=</span>r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sides=</span>x0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle=</span>angle,</span>
<span id="cb3-4">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(x0)), </span>
<span id="cb3-5">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rotated regular polygons using ggforce"</span>, </span>
<span id="cb3-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"@NeuroMLA"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-11">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb3-12">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-13">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-14">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> p</span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(p)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/index_files/figure-html/color-tinkering-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="make-it-pallette" class="level3">
<h3 class="anchored" data-anchor-id="make-it-pallette">Make it pallette</h3>
<p>We can have unlimited color combinations. Just as a start, two places I like to use when dealing with color pallettes in R:</p>
<ul>
<li><a href="https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html">R Color Brewer Pallettes</a></li>
<li><a href="https://color.adobe.com">Adobe Color Picker</a></li>
</ul>
<p>We will use <code>scale_fill_*()</code> functions of <code>ggplot</code>. I normally use <code>scale_fill_manual()</code> if I want to handpick the values, but <code>scale_fill_viridis()</code> and <code>scale_fill_brewer()</code> often do a nice job too!</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/index_files/figure-html/pallettes-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/index_files/figure-html/pallettes-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/index_files/figure-html/pallettes-3.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/index_files/figure-html/pallettes-4.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2021,
  author = {Andina, Matias},
  title = {Rotating Perspectives},
  date = {2021-01-03},
  url = {https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2021" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2021. <span>“Rotating Perspectives.”</span> January 3,
2021. <a href="https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/">https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/</a>.
</div></div></section></div> ]]></description>
  <category>generative-art</category>
  <category>R</category>
  <guid>https://matiasandina.netlify.app/posts/2021-01-03-rotating-perspectives/</guid>
  <pubDate>Sun, 03 Jan 2021 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Art in a New Year</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/</link>
  <description><![CDATA[ 





<p>I have not made resolutions for this year<sup>1</sup>. I have instead spent that time playing with patterns on a canvas. It’s been a while since I wanted to have some time to do generative art using geometric figures and I finally got down to it on the very first day of this year. I found a fountain of joy after just a few hours of tinkering, something inside tells me this could be a new New Year’s tradition for me.</p>
<p>I started out with a simple form like a hexagon and started looking for patterns that were appealing to me, like the color palette.</p>
<p><img src="https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/img/hex_057.png" class="img-fluid"></p>
<p>Something that I like about generative art is that I’m not in control, it’s a discovery process. I just set a few rules and pleasant aesthetics appear before me. The patterns might appear by design, but often they are the result of a benign error that created something beautiful. After tinkering with these patterns for a bit, I arrived at these new forms. They take me to a special place.</p>
<p>I have selected some of the results that I like the most below.</p>
<p><img src="https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/img/RP_020.png" class="img-fluid"> <img src="https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/img/RP_073.png" class="img-fluid"> <img src="https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/img/RP_090.png" class="img-fluid"> <img src="https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/img/RP_098.png" class="img-fluid"> <img src="https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/img/RP_099.png" class="img-fluid"> <img src="https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/img/RP_100.png" class="img-fluid"></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Well, at least not in the classical way, mostly just wishing we could get back to normal life sometime before 2022.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2021,
  author = {Andina, Matias},
  title = {Art in a {New} {Year}},
  date = {2021-01-02},
  url = {https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2021" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2021. <span>“Art in a New Year.”</span> January 2, 2021.
<a href="https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/">https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/</a>.
</div></div></section></div> ]]></description>
  <category>generative-art</category>
  <category>R</category>
  <guid>https://matiasandina.netlify.app/posts/2021-01-02-art-in-a-new-year/</guid>
  <pubDate>Sat, 02 Jan 2021 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Unique</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2020-07-05-Unique/</link>
  <description><![CDATA[ 





<p>I have experienced a few explosions here and there. Yes, it’s me not reading the docs. But it’s also me, assuming that verbs mean one thing and not another. Let’s do some <code>unique</code> operations in different languages.</p>
<section id="the-matlab-way" class="level3">
<h3 class="anchored" data-anchor-id="the-matlab-way">The MATLAB way</h3>
<pre><code>&gt;&gt; unique([3, 3, 3, 90, 10])

ans =

3 10 90</code></pre>
</section>
<section id="the-python-way" class="level3">
<h3 class="anchored" data-anchor-id="the-python-way">The Python way</h3>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; np.unique([3, 3, 3, 90, 10])
array([ 3, 10, 90])</code></pre>
</section>
<section id="the-r-way" class="level3">
<h3 class="anchored" data-anchor-id="the-r-way">The R way</h3>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>[1]  3 90 10</code></pre>
</div>
</div>
<p>This is what I would expect. I want the unique values, <strong>without</strong> the sorting. If I wanted to sort, I would do:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>[1]  3 10 90</code></pre>
</div>
</div>
<p>Maybe this is just me and R is the odd (read intuitive) ball here, but 🤷…</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2020,
  author = {Andina, Matias},
  title = {Unique},
  date = {2020-07-05},
  url = {https://matiasandina.netlify.app/posts/2020-07-05-Unique/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2020" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2020. <span>“Unique.”</span> July 5, 2020. <a href="https://matiasandina.netlify.app/posts/2020-07-05-Unique/">https://matiasandina.netlify.app/posts/2020-07-05-Unique/</a>.
</div></div></section></div> ]]></description>
  <category>fun</category>
  <category>python</category>
  <category>R</category>
  <guid>https://matiasandina.netlify.app/posts/2020-07-05-Unique/</guid>
  <pubDate>Sat, 04 Jul 2020 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Birthday Problem</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2020-06-13-birthday-problem/</link>
  <description><![CDATA[ 





<p>We have all been there, classic math riddle:</p>
<blockquote class="blockquote">
<p>How many people need to be in one room so that the probability of two of them having the same birthday is more than 0.5?</p>
</blockquote>
<p>In a recent bootcamp exercise we tackled this in python and I wanted to share, just because it’s fun. I did it for a range of probabilities. My solution is probably not the fastest/shortest/most pythonic, but it’s a little thing I put out there so, if you want to use/improve it, please do!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> prob(n):</span>
<span id="cb1-6">    numerator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.math.factorial(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> np.math.factorial(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n)</span>
<span id="cb1-7">    denominator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> n</span>
<span id="cb1-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> numerator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>denominator)</span>
<span id="cb1-9"></span>
<span id="cb1-10">probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(prob, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)))</span>
<span id="cb1-11"></span>
<span id="cb1-12">plt.plot(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(probs)), probs)</span>
<span id="cb1-13">plt.show()</span></code></pre></div>
</div>
<p>A bad translation into R, it would be something like:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">prob <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(n){</span>
<span id="cb2-2">  numerator <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lfactorial</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lfactorial</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n))</span>
<span id="cb2-3">    denominator <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> n</span>
<span id="cb2-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> numerator<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>denominator)</span>
<span id="cb2-5">}</span>
<span id="cb2-6"></span>
<span id="cb2-7">probs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(n) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span>(n))</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>, probs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span>,</span>
<span id="cb2-10">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probability of 2 people having same birthday"</span>,</span>
<span id="cb2-11">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"People in a room"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"probability"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2020-06-13-birthday-problem/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2020,
  author = {Andina, Matias},
  title = {Birthday {Problem}},
  date = {2020-06-13},
  url = {https://matiasandina.netlify.app/posts/2020-06-13-birthday-problem/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2020" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2020. <span>“Birthday Problem.”</span> June 13, 2020. <a href="https://matiasandina.netlify.app/posts/2020-06-13-birthday-problem/">https://matiasandina.netlify.app/posts/2020-06-13-birthday-problem/</a>.
</div></div></section></div> ]]></description>
  <category>fun</category>
  <category>python</category>
  <category>R</category>
  <guid>https://matiasandina.netlify.app/posts/2020-06-13-birthday-problem/</guid>
  <pubDate>Fri, 12 Jun 2020 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Complex Fun</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2020-04-30-complex-fun/</link>
  <description><![CDATA[ 





<div class="cell" data-fig.asp="0.5">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2020-04-30-complex-fun/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<hr>
<p>People say that if you have to explain a joke, it loses value. Probably true. I guess I just wanted to partially comment on how different disciplines analyze different levels of complexity.</p>
<p>As molecular biologist, I think we were trained to seldom think about the whole system, we were trained to just give up complexity and focus on a couple of fancy names (yes, YFG fits pretty well as the center of this Universe). Genes are awesome, weak protein-protein interactions and conformational changes rock. Are you missing the whole world by focusing too much?</p>
<p>As a biologist, I think we were trained by association (i.e., “If this, then that. Now repeat logic for a million different processes”). This means that our view of every phenomenon tends to be overly complicated. We do this at every scale we analyze Life, not always with the study complexity in mind, but just as a reflex. This is not an intrinsic fault of the biologist, it might be just a result of how data is collected and the empirical nature of the field.</p>
<p>I think physicists get it often right, as simple as it should be, not less. If the whole thing is a tennis ball, and your system of interest is ruled by macro laws, just approximate and do <img src="https://latex.codecogs.com/png.latex?m%5Cvec%7Bg%7D">.</p>
<p>All in all, this is the same dataset, 3 worlds apart (or 3 convention centers apart). I think the joke is on us :smile:.</p>
<hr>
<p>For those of you who want to recreate, you can find the R code below:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(xkcd)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-6">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb1-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb1-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-9">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb1-11">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tweenr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tween_along</span>(df,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cubic-in-out'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">along =</span> time)</span>
<span id="cb1-12"></span>
<span id="cb1-13"></span>
<span id="cb1-14">my_theme <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_xkcd</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.border =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb1-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-19">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))</span>
<span id="cb1-20"></span>
<span id="cb1-21"></span>
<span id="cb1-22">p0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x,y))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_jitter</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jitter"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-25">  my_theme<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOLECULAR</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">BIOLOGIST"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb1-27"></span>
<span id="cb1-28">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_n</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x,y))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_path</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-30">  my_theme<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BIOLOGIST"</span>)</span>
<span id="cb1-32"></span>
<span id="cb1-33">p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-34">  ggforce<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_circle</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray30"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb1-36">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>),</span>
<span id="cb1-37">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"closed"</span>),</span>
<span id="cb1-38">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow.fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mg"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-40">  my_theme <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PHYSICIST"</span>)</span>
<span id="cb1-42">  </span>
<span id="cb1-43">p0 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p2</span></code></pre></div>
</details>
</div>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2020,
  author = {Andina, Matias},
  title = {Complex {Fun}},
  date = {2020-04-30},
  url = {https://matiasandina.netlify.app/posts/2020-04-30-complex-fun/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2020" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2020. <span>“Complex Fun.”</span> April 30, 2020. <a href="https://matiasandina.netlify.app/posts/2020-04-30-complex-fun/">https://matiasandina.netlify.app/posts/2020-04-30-complex-fun/</a>.
</div></div></section></div> ]]></description>
  <category>art</category>
  <category>fun</category>
  <category>R</category>
  <guid>https://matiasandina.netlify.app/posts/2020-04-30-complex-fun/</guid>
  <pubDate>Wed, 29 Apr 2020 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Writing Checklist</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2020-01-02-writing-checklist/</link>
  <description><![CDATA[ 





<p>I spent a good portion of the end of 2019 and the beginning of 2020 reading Paul Graham’s essays. Many caught my attention (and my fingers to take notes). I want to comment on an essay about advice for good writing. Because it was written in a way that allowed for easy reformatting (ideas separated by <code>;</code>), I thought it would be cool to convert the prose into a checklist).</p>
<section id="creating-the-checklist" class="level2">
<h2 class="anchored" data-anchor-id="creating-the-checklist">Creating the checklist</h2>
<p>The main text comes from <a href="http://www.paulgraham.com/writing44.html">here</a>. For simplicity, I have only used the main paragraph (aka, copy and paste the second paragraph). I omitted it here because it would be long and you can read it in the native format from the source.</p>
<p>In the code chunk below I comment the steps I took.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># text is copy-paste of the second paragraph</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># text &lt;- c("...") ... == copy-paste</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># split using "; "</span></span>
<span id="cb1-5">sp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split</span>(text, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"; "</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># To create a checklist</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DASH SPACE [ ] SPACE SPACE</span></span>
<span id="cb1-9">sp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"- [ ]  "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(sp))</span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append markdown title</span></span>
<span id="cb1-11">sp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"# Paul Graham's Writing Checklist"</span>, sp)</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Capitalize first letter of every sentence</span></span>
<span id="cb1-14">sp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_sentence</span>(sp)</span></code></pre></div>
</div>
<p>If you want to write it to file, you can use <code>writeLines()</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write</span></span>
<span id="cb2-2">fileConn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"paul_graham_writing_checklist.md"</span>)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeLines</span>(sp, fileConn)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">close</span>(fileConn)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If you want to knit to html you can do this</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># knitr::knit2html("paul_graham_writing_checklist.md")</span></span></code></pre></div>
</div>
<p>Let’s take a look at the product:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># printing for web post</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(sp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># Paul graham's writing checklist
- [ ]  Write a bad version 1 as fast as you can
- [ ]  Rewrite it over and over
- [ ]  Cut out everything unnecessary
- [ ]  Write in a conversational tone
- [ ]  Develop a nose for bad writing, so you can see and fix it in yours
- [ ]  Imitate writers you like
- [ ]  If you can't get started, tell someone what you plan to write about, then write down what you said
- [ ]  Expect 80% of the ideas in an essay to happen after you start writing it, and 50% of those you start with to be wrong
- [ ]  Be confident enough to cut
- [ ]  Have friends you trust read your stuff and tell you which bits are confusing or drag
- [ ]  Don't (always) make detailed outlines
- [ ]  Mull ideas over for a few days before writing
- [ ]  Carry a small notebook or scrap paper with you
- [ ]  Start writing when you think of the first sentence
- [ ]  If a deadline forces you to start before that, just say the most important sentence first
- [ ]  Write about stuff you like
- [ ]  Don't try to sound impressive
- [ ]  Don't hesitate to change the topic on the fly
- [ ]  Use footnotes to contain digressions
- [ ]  Use anaphora to knit sentences together
- [ ]  Read your essays out loud to see (a) where you stumble over awkward phrases and (b) which bits are boring (the paragraphs you dread reading)
- [ ]  Try to tell the reader something new and useful
- [ ]  Work in fairly big quanta of time
- [ ]  When you restart, begin by rereading what you have so far
- [ ]  When you finish, leave yourself something easy to start with
- [ ]  Accumulate notes for topics you plan to cover at the bottom of the file
- [ ]  Don't feel obliged to cover any of them
- [ ]  Write for a reader who won't read the essay as carefully as you do, just as pop songs are designed to sound ok on crappy car radios
- [ ]  If you say anything mistaken, fix it immediately
- [ ]  Ask friends which sentence you'll regret most
- [ ]  Go back and tone down harsh remarks
- [ ]  Publish stuff online, because an audience makes you write more, and thus generate more ideas
- [ ]  Print out drafts instead of just looking at them on the screen
- [ ]  Use simple, germanic words
- [ ]  Learn to distinguish surprises from digressions
- [ ]  Learn to recognize the approach of an ending, and when one appears, grab it.</code></pre>
</div>
</div>
<p>The checklist is not in strict chronological order, so I might try to reshape it later into something that would make more sense as a timeline. It will render as a checklist in something that is GitHub flavored (e.g., on GitHub). However, I will probably just use it as text file or print it as is.</p>
<p>I also noticed that the link for the Spanish translation is broken/outdated, so I tried my best to translate it. <a href="../../2020/01/escribiendo-en-pocas-palabras/">Here it is</a></p>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>I think this checklist is an awesome learning opportunity and a clear path to improving one’s writing. Quite happy to have found it, looking forward to improving my skills.</p>
<p>I got to learn a few cool R things like, 1) I can use <code>writeLines()</code> to write a <code>.md</code> file and 2) <code>stringr::str_to_sentence()</code> is an <strong>awesome</strong> function.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2020,
  author = {Andina, Matias},
  title = {Writing {Checklist}},
  date = {2020-01-02},
  url = {https://matiasandina.netlify.app/posts/2020-01-02-writing-checklist/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2020" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2020. <span>“Writing Checklist.”</span> January 2, 2020.
<a href="https://matiasandina.netlify.app/posts/2020-01-02-writing-checklist/">https://matiasandina.netlify.app/posts/2020-01-02-writing-checklist/</a>.
</div></div></section></div> ]]></description>
  <category>writing</category>
  <category>learning</category>
  <category>DocumentingLearning</category>
  <category>R</category>
  <guid>https://matiasandina.netlify.app/posts/2020-01-02-writing-checklist/</guid>
  <pubDate>Thu, 02 Jan 2020 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Fitbit Analysis</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/</link>
  <description><![CDATA[ 





<p>It’s been a bit more than a year since I got a fitbit and I have been pretty excited about tracking my activity and heart rate. I should say I’m quite surprised about the sleep data. Tracking sleep has been, in fact, the most exciting feature, and I now strive to get at least 7 hours of sleep per night.</p>
<p>Let’s first see a glimpse of the data, just to know what type of data we are dealing with.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-3_449d71aadc60365c95379d226147e553">
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 5 × 8
  date_time           dateTime   dataset_time variable value total_value
  &lt;dttm&gt;              &lt;date&gt;     &lt;time&gt;       &lt;chr&gt;    &lt;dbl&gt;       &lt;dbl&gt;
1 2018-06-10 00:00:00 2018-06-10 00'00"       steps        0        7256
2 2018-06-10 00:01:00 2018-06-10 01'00"       steps        8        7256
3 2018-06-10 00:02:00 2018-06-10 02'00"       steps        0        7256
4 2018-06-10 00:03:00 2018-06-10 03'00"       steps        0        7256
5 2018-06-10 00:04:00 2018-06-10 04'00"       steps        0        7256
# ℹ 2 more variables: date &lt;date&gt;, time &lt;time&gt;</code></pre>
</div>
</div>
<section id="density-plots" class="level2">
<h2 class="anchored" data-anchor-id="density-plots">Density plots</h2>
<p>Let’s now inspect the overall distribution for heart rate and step values.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-4_7f262ef97126c97a9f9b5ff7195a56e8">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="when-do-i-move" class="level2">
<h2 class="anchored" data-anchor-id="when-do-i-move">When do I move?</h2>
<p>I will start by focusing on the data for steps.</p>
<p>I’m curious to see what times of the day have the most activity. Because I have a quite large amount of data points (~751 K) I will use <code>geom_hex()</code> to count for me and simplify rendering<sup>1</sup>.</p>
<div class="cell" data-hash="index_cache/html/steps-1_8d6c71e6ad4638b0de99fb1db91cc53b">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/steps-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Well, I should have remembered that for the vast majority of minutes (regardless of the hour of the day), the count is exactly zero. Let’s only look at the positive counts:</p>
<div class="cell" data-hash="index_cache/html/steps-2_ad7004a8e0bb2c9104f43a69ad49a0af">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/steps-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>We see now some patches that have high activity (&gt; 100 steps), particularly around 9:00, 12:00 and 18:00. These mostly correspond to “going to work”, “activity around lunch time (?)”, and “going home / physical activity”. For all other cases, it looks like I move around 10-20 steps per minute, regardless of the minute within the hour.</p>
<section id="last-10-minutes" class="level3">
<h3 class="anchored" data-anchor-id="last-10-minutes">Last 10 minutes</h3>
<p>The result above is interesting because I usually have to be reminded by Fitbit to “move up to 250 steps in the hour”. I receive this notification during the last 10 minutes of the hour and I would think that during those 10 minutes I put more steps than during the first 50. The data show I’m wrong:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/last-10-plot-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>That being said, I want to keep my reminder on. I feel like having it turned on definitely adds ~ 1000-2000 steps per day.</p>
</section>
<section id="daily-average" class="level3">
<h3 class="anchored" data-anchor-id="daily-average">Daily average</h3>
<p>Let’s get one level above and aggregate each day as a unit. This plot shows a nice trend, with months from May to August showing an increase on the number of steps. Keep in mind that November will show little average steps because for that month we have incomplete data (last day in database is 2019-11-13),</p>
<div class="cell" data-hash="index_cache/html/steps-3_71a509a22fe214d601e90217c476bdc1">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/steps-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>At this part of the analysis, I should make clear that I took vacations from <code>2019-06-27</code> to <code>2019-07-11</code>. We will use this information in the analysis to make some things clear.</p>
</section>
</section>
<section id="distribution" class="level2">
<h2 class="anchored" data-anchor-id="distribution">Distribution</h2>
<p>We looked at the average daily steps for each month, how about the distribution of daily steps? We see that most days I come quite close to the default target of 10K steps. There are some days with very little steps (see below) and, obviously, some days with extreme number of steps.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/typical-events-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="extreme-events" class="level2">
<h2 class="anchored" data-anchor-id="extreme-events">Extreme events</h2>
<p>Using the boxplot below, we can define <em>extreme events</em> as instances where I walked more than 20K steps. I chose to plot this by day of the week, to get an insight about periodicity of events.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Because I walked a lot during the vacations, I highlighted the days on top of the previous boxplot. Most of the extreme events are definitely during the vacations. Moreover, none of the days I walked less than 10K steps, pretty amazing!</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/vacations-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>There are some extreme <em>low</em> events, these are quite likely the days I just don’t wear the fitbit (or days I forget to wear it for most of the day). Just because I can order the data and make another plot, I went ahead and did it!</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/arranged-steps-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>We usually go for walks on Saturdays and/or Sundays. Knowing this little piece of data, it’s quite expected to see Saturdays being the days with higher number of steps (and hence higher success rate on the 10K target).</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="season" class="level2">
<h2 class="anchored" data-anchor-id="season">Season</h2>
<p>I want to turn the focus now to the seasonality of the data. I will use a helper function <code>getSeason()</code> that I took from <a href="https://stackoverflow.com/questions/9500114/find-which-season-a-particular-date-belongs-to">StackOverflow</a>.</p>
<p>We can inspect the effect of season on my walking.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The plot above is not good, it fails to communicate. I think this is a better way to show the data.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="a-years-heart-rate-in-one-plot" class="level2">
<h2 class="anchored" data-anchor-id="a-years-heart-rate-in-one-plot">A year’s heart rate in one plot</h2>
<p>I’m borrowing <strong>heavily</strong> from <a href="https://livefreeordichotomize.com/2017/12/27/a-year-as-told-by-fitbit/">Nick</a> here. But I thought it was a brilliant plot, so I took it for a ride with my data. I actually changed a few things, I decided to keep the native sampling rate and use <code>geom_line()</code> instead of down-sampling and using <code>geom_tile()</code>. The overall trend is clear, movements during the morning and the afternoon that correlate well with going and coming back from work. Somewhere around July 2019 you can see the change in timezone when I took vacations. There are a couple of days in late May with continuously high or lacking values, I take this as one of the days I forgot the fitbit at home, likely spurious measures.</p>
<p><img src="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/heart_plot.png" class="img-fluid"></p>
</section>
<section id="code" class="level2">
<h2 class="anchored" data-anchor-id="code">Code</h2>
<p>The code for this post is quite long and I thought it would get in the way. I am happy to share upon request, hit me up on <a href="https://twitter.com/NeuroMLA">Twitter</a> or in the comments below.</p>
</section>
<section id="sources" class="level2">
<h2 class="anchored" data-anchor-id="sources">Sources</h2>
<ul>
<li>https://livefreeordichotomize.com/2017/12/27/a-year-as-told-by-fitbit/</li>
</ul>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I had been searching for excuses to use this function for a while. Check it out <a href="https://ggplot2.tidyverse.org/reference/geom_hex.html">here</a>↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2019,
  author = {Andina, Matias},
  title = {Fitbit {Analysis}},
  date = {2019-11-22},
  url = {https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2019" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2019. <span>“Fitbit Analysis.”</span> November 22, 2019.
<a href="https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/">https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/</a>.
</div></div></section></div> ]]></description>
  <category>tracking</category>
  <category>learning</category>
  <category>R</category>
  <guid>https://matiasandina.netlify.app/posts/2019-11-22-fitbit-analysis/</guid>
  <pubDate>Fri, 22 Nov 2019 00:00:00 GMT</pubDate>
</item>
<item>
  <title>On pipelines</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2019-11-14-on-pipelines/</link>
  <description><![CDATA[ 





<p>I have been thinking about different problems I have when writing code and the things that I normally try to do to keep my projects clean and functional. I wrote this post to put this thoughts out there, hopefully I will receive input from the great software engineers.</p>
<section id="problems-in-mind" class="level2">
<h2 class="anchored" data-anchor-id="problems-in-mind">Problems in mind</h2>
<section id="where-do-you-live" class="level3">
<h3 class="anchored" data-anchor-id="where-do-you-live">Where do you live?</h3>
<p>Code files usually live in one folder, which is also a GitHub folder that you and your team commit/push to. So far, so good. But what do you do with the data to feed that monster pipeline of yours?</p>
<p>I will assume that your concerns with data privacy are minor or you handled them accordingly (only private parties have access to the data).</p>
<p>Now, you still have the problem of <em>where</em> to put this other folder, which is basically a size problem.</p>
<blockquote class="blockquote">
<p>Small files can live with your data</p>
</blockquote>
<p>This is the case for small and few text files of some thousand rows. Easy enough, you just go with your <code>/repo-name/data/</code> and live happily ever after.</p>
<blockquote class="blockquote">
<p>Medium size files</p>
</blockquote>
<p>These files are big enough to be a problem for hosting on GitHub. File formats start to be an issue here, images and video will not be easily accessible anywhere you take it.</p>
<p><strong>Options: the cloud</strong> ☁️</p>
<p><strong>Pros:</strong> It’s fluffy. Now, seriously, it’s good that your code can point to one place, download the stuff into local and use it. Every computer can do the same and there <em>should</em> be no problem. Because your sizes are not huge, you <em>should</em> be fine.</p>
<p><strong>Cons:</strong> You need internet. No, internet it’s not everywhere all the time<sup>1</sup>. Internet is not in my cellphone on a second basement in a concrete building. Even with the fastest internet, it’s not trivial to setup <code>your-favorite-cloud-service</code> to allow access to <code>the-sketchy-script-you-wrote</code><sup>2</sup>.</p>
<center>
<img src="https://matiasandina.netlify.app/posts/2019-11-14-on-pipelines/simple_credentials.jpg" class="img-fluid">
</center>
<hr>
<p><strong>Options: Good old-fashioned external hard drive.</strong> 💾</p>
<p><strong>Pros:</strong> This is a good one if your data size is in the Gb range and you don’t really need to share it with too many people.</p>
<p><strong>Cons:</strong> Hard drives fail. Are you ready to lose your data? It starts to get really annoying when you have to do back-ups of your data and your data is big enough that you can’t use your computer’s hard drive (that’s why you chose an external hard drive in the first place). Should you have an external hard drive for the external hard drive? Are you planning to write the output of your code on those hard drives? Brace for impact.</p>
<center>
<img src="https://matiasandina.netlify.app/posts/2019-11-14-on-pipelines/spiderman_pointing_meme.jpg" class="img-fluid">
</center>
<p>External hard-drives might have paths that change depending on which computer is connected to. This can easily be a path inferno. Moreover, some hard drives don’t work if you try to use them in different OS.</p>
<blockquote class="blockquote">
<p>Large sizes</p>
</blockquote>
<p>I work with brains. Last time I checked, one mouse brain is <code>~2TB</code>, n=1, just a few channels, not even the best resolution we can get.</p>
<p>I think local/cloud servers are the only way to go here<sup>3</sup>. I don’t have a lot of experience with this, but I have suffered internet upload/download speed problems when I try to sync with my cloud back-ups or share image/video files with my team.</p>
</section>
<section id="paths-need-to-be-absolute" class="level3">
<h3 class="anchored" data-anchor-id="paths-need-to-be-absolute">Paths need to be absolute</h3>
<p>Because your working directory is the folder where your code lives<sup>4</sup>, but your data folder lives elsewhere, you kind of need to use absolute paths all the time.</p>
<p>I have only been able to fix this issue using functions that attempt to fix this when running the script.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">fix_working_environment <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(saved_path,</span>
<span id="cb1-2">                                    local_path){</span>
<span id="cb1-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if the folder structure doesn't work as expected...</span></span>
<span id="cb1-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this will explode </span></span>
<span id="cb1-5">  stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace</span>(saved_path,</span>
<span id="cb1-6">                       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"some_regular_expression"</span>,</span>
<span id="cb1-7">                       local_path)</span>
<span id="cb1-8">}</span></code></pre></div>
</div>
<p>This is particularly annoying when you have to run commands that involve calling things from console.</p>
<p>Let’s call <code>ImageJ</code> from R.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/matias/Downloads/Fiji.app/ImageJ-linux64 --run"</span>,</span>
<span id="cb2-2">             macro_to_run))</span></code></pre></div>
</div>
<p>The moment somebody changes the Fiji folder, or tries to call ImageJ from another computer, that code brakes. I’m unaware of how to make sure these things bullet-proof, <strong>please enlighten me</strong>.</p>
<p>Let’s call <code>python</code> from R. Wait, what version of python do you want? I rest my case.</p>
</section>
<section id="processes-are-identified-by-the-files" class="level3">
<h3 class="anchored" data-anchor-id="processes-are-identified-by-the-files">Processes are identified by the files</h3>
<p>I have this problem quite often. It might be because my pipelines follow this logic.</p>
<div class="cell">
<div class="cell-output-display">
<div class="DiagrammeR html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-829cf29291305b9bdd78" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-829cf29291305b9bdd78">{"x":{"diagram":"\n\ngraph LR\nD(Raw Data)\nA[List all files] -->|Apply functions| B[Write computation]\nD --> A\nB --> C(New files)\nC --> A\n\nlinkStyle 0 stroke-width:2px,fill:none,stroke:pink;\nlinkStyle 1 stroke-width:2px,fill:none,stroke:pink;\nlinkStyle 2 stroke-width:2px,fill:none,stroke:pink;\nlinkStyle 3 stroke-width:2px,fill:none,stroke:pink;     style A fill:#f9f, stroke:#333,stroke-width:1px        \nstyle B fill:#f9f,stroke:#333,stroke-width:1px        \n        "},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>It’s quite difficult to escape the infinite <code>list all files</code> –&gt; <code>apply function to all files</code> –&gt; <code>write computations into new files</code> loop. I don’t really know what’s on the other side.</p>
<p>The main problem is that your previous, current, and next files always serve as identifiers and you need to carry over their absolute path (to be able to read them form your data folder). Whenever these paths get corrupted (or you change your computer) things stop working.</p>
<p>This problem might stem from the fact that I normally have to process experimental units through the pipeline. I have to do many things to an experimental unit and have many many experimental units composing the data for one pipeline. That’s when my inner voice goes:</p>
<blockquote class="blockquote">
<p>But I would also like to have the possibility to run or re-run just one (or just a few experimental units).</p>
</blockquote>
<p>The way I handle this is by leaving open the door to hand selection of files (aka interactive mode, not fun). However, interactive mode somewhat helps with the problem below.</p>
</section>
<section id="dont-move-my-files" class="level3">
<h3 class="anchored" data-anchor-id="dont-move-my-files">Don’t move my files</h3>
<p>People do stuff people normally do, like moving folders around…that’s BAD, REALLY BAD. It’s also quite difficult to communicate the need to keep the file structure without casting the magic spells of <em>everything will break</em><sup>5</sup>.</p>
<p>I don’t feel good with the level of dependency on file structure that my projects always end up having. <strong>Please enlighten me on this one too!</strong></p>
</section>
<section id="dont-rename-my-files" class="level3">
<h3 class="anchored" data-anchor-id="dont-rename-my-files">Don’t rename my files</h3>
<p>Don’t rename my files, except when I do. That would be a better subtitle of this section. A great way of not dealing with multiple copies of the same files. For example, let’s say you applied a mask to an image and then cropped, and rotated it. How many files do you keep? What if your image size was 1 Gb?</p>
<p>My hack around this is to rename the files (this include the cases where I just want to move files to specific sub-folders). Because I rely so much on the file names, this renaming usually comes back to bite me. I just 🤷.</p>
</section>
<section id="operating-systems" class="level3">
<h3 class="anchored" data-anchor-id="operating-systems">Operating systems</h3>
<p>I’m writing this in 2019, I thought the OS problem was solved. Turns out it’s not solved at all and developers shy away from it more often than they should. I understand them, developing for every OS is a huge pain and requires you to constantly check in multiple machines (or have access to a teammate that breaks your code as soon as you push it).</p>
<hr>
</section>
</section>
<section id="what-is-your-approach" class="level2">
<h2 class="anchored" data-anchor-id="what-is-your-approach">What is your approach?</h2>
<p>This is something I will continue to think for a long time, and my approach might need to be adjusted to each situation. What is your current approach?</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Maybe I should say moderately fast and stable internet.↩︎</p></li>
<li id="fn2"><p>Image borrowed from <a href="https://freek.dev/459-how-to-setup-and-use-the-google-calendar-api">here</a>↩︎</p></li>
<li id="fn3"><p>And yet, for many practical reasons, I never do this.↩︎</p></li>
<li id="fn4"><p>And you should <strong>never</strong> forcefully set the working directory elsewhere.↩︎</p></li>
<li id="fn5"><p>Yes, your computer is on the line! And I will get all your passwords (?).↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2019,
  author = {Andina, Matias},
  title = {On Pipelines},
  date = {2019-11-14},
  url = {https://matiasandina.netlify.app/posts/2019-11-14-on-pipelines/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2019" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2019. <span>“On Pipelines.”</span> November 14, 2019. <a href="https://matiasandina.netlify.app/posts/2019-11-14-on-pipelines/">https://matiasandina.netlify.app/posts/2019-11-14-on-pipelines/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>data</category>
  <category>reproducibility</category>
  <guid>https://matiasandina.netlify.app/posts/2019-11-14-on-pipelines/</guid>
  <pubDate>Thu, 14 Nov 2019 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Visualization Challenge 2</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2019-04-14-data-visualization-challenge-2/</link>
  <description><![CDATA[ 





<p>This post is made as a backup for the data visualization challenge number 2. Data comes from the daily posts of the members of the Data Visualization Society (DVS) on the DVS Slack channels. You can see everybody’s submissions for the challenge <a href="https://www.datavisualizationsociety.com/challenge2">here</a>.</p>
<p>I am also very motivated to explore the dark versions of the ggplot themes. The package I’m going to be using is called <code>ggdark</code>.</p>
<section id="dive-in" class="level2">
<h2 class="anchored" data-anchor-id="dive-in">Dive in</h2>
<p>These are the libraries we’ll need:</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggdark)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lubridate)</span></code></pre></div>
</details>
</div>
<p>We read the data from the repository.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/data-visualization-society/datavizsociety/master/challenge_data/dvs_challenge_2_channel_topics_over_time/flattened_channel_data.csv"</span>)</span></code></pre></div>
</details>
</div>
<p>Let’s perform some summary stats. There’s 62 channels, but I will focus on the top 15 channels as ranked by their total volume of characters. I’m using this metric because the correlation between characters and the number of posts is, naturally, good.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(posts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>responses, characters))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark_theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number_si</span>())</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-14-data-visualization-challenge-2/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Summary.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">sum_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(channel) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_channel =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(characters),</span>
<span id="cb4-3">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median_channel =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(characters)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">top_n</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wt =</span>  total_channel) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(total_channel))</span></code></pre></div>
</details>
</div>
<p>Modify the original data and do some stats.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(channel) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_channel =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(characters),</span>
<span id="cb5-3">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median_channel =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(characters),</span>
<span id="cb5-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">char_per_ping =</span> characters<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(posts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>responses))   <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">daily_flow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(characters),</span>
<span id="cb5-8">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">daily_posts =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(posts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>responses))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span></code></pre></div>
</details>
</div>
</section>
<section id="first-pair" class="level2">
<h2 class="anchored" data-anchor-id="first-pair">First pair</h2>
<p>The idea behind the first pair of plots is to see the sheer amount of volume on certain channels.</p>
<p>A good way of seeing how the top channels are ordered according to output is to do an ordered boxplot.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">top_box <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(channel <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(sum_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>channel)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">channel=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(channel), median_channel)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(channel, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(characters)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark_theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top %s Channels"</span>,</span>
<span id="cb6-10">                  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(sum_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>channel))),</span>
<span id="cb6-11">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Metric: median characters"</span>)</span></code></pre></div>
</details>
</div>
<p>I’m also curious about how persistent in time the flow is.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">wave <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(channel <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(sum_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>channel)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">channel=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(channel), total_channel)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(date, channel, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(characters))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd=</span>characters))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark_theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_gradient</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#613A00"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FA9800"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 15 channels"</span>, </span>
<span id="cb7-11">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Metric: total characters"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
</details>
</div>
<p>We put everything together with the <code>cowplot</code> package.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(top_box, wave)</span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the plot</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#ggsave("box_wave.svg", width = 8, height = 4, units = "in", dpi="retina")</span></span></code></pre></div>
</details>
</div>
<p>I later modified this output a bit using Inkscape.</p>
<p><img src="https://matiasandina.netlify.app/posts/2019-04-14-data-visualization-challenge-2/box_wave.svg" class="img-fluid"></p>
</section>
<section id="lengthy-channels" class="level2">
<h2 class="anchored" data-anchor-id="lengthy-channels">Lengthy channels</h2>
<p>While most of the channels have a low median, even below a full tweet, it looks like some channels tend to have very lengthy posts.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate median</span></span>
<span id="cb9-2">median_post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(</span>
<span id="cb9-3">  df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>characters<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>posts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>responses))</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do the plot  </span></span>
<span id="cb9-6">lengthy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(total_channel),</span>
<span id="cb9-7">               char_per_ping))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark_theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">280</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(</span>
<span id="cb9-11">    df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>characters<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>posts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>responses)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">340</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Median post"</span>,</span>
<span id="cb9-13">                                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"One tweet"</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-14">         <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>channel), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-15">         <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-16">         <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-17">  ggrepel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(df,</span>
<span id="cb9-18">                                       char_per_ping <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">850</span>),</span>
<span id="cb9-19">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> channel, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>channel))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bquote</span>(</span>
<span id="cb9-21">    log10 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(total characters)"</span>),</span>
<span id="cb9-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"characeters per post"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Channels with lengthy posts"</span>)</span>
<span id="cb9-24"></span>
<span id="cb9-25"></span>
<span id="cb9-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save</span></span>
<span id="cb9-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ggsave("lengthy.svg", width = 8, height = 4, units = "in",dpi="retina")</span></span></code></pre></div>
</details>
</div>
<p><img src="https://matiasandina.netlify.app/posts/2019-04-14-data-visualization-challenge-2/lengthy.svg" class="img-fluid"></p>
</section>
<section id="share-of-flow" class="level2">
<h2 class="anchored" data-anchor-id="share-of-flow">Share of flow</h2>
<p>What is the share of each channel on the total flow within the DataViz Slack?</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">top_top_channels <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sum_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(total_channel)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb10-4"></span>
<span id="cb10-5">share <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">big_channel =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(channel <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> top_top_channels<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>channel,</span>
<span id="cb10-7">                              channel, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other"</span>),</span>
<span id="cb10-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(characters),</span>
<span id="cb10-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rel_char =</span> characters<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>total) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(date, rel_char, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>big_channel))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_viridis_d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark_theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Relative share"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Channel"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Share of the conversation"</span>,</span>
<span id="cb10-17">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Relative share of the total characters per day"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_date</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2019-02-18"</span>),</span>
<span id="cb10-19">                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2019-04-23"</span>)),</span>
<span id="cb10-20">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date_breaks =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1 week"</span>, </span>
<span id="cb10-21">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date_labels =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%b-%d"</span>)</span></code></pre></div>
</details>
</div>
<p>It seems the initial bump was driven by many (lengthy) introductions, and nowadays the discussion has moved towards other channels.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">intro_decay <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(date, daily_flow))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(df, channel <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb11-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-introductions"</span>)),</span>
<span id="cb11-5">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(date, characters), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yellow"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark_theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Daily characters"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2019-04-10"</span>,</span>
<span id="cb11-10">                               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2019-04-08"</span>)),</span>
<span id="cb11-11">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>),</span>
<span id="cb11-12">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-introductions"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all channels"</span>),</span>
<span id="cb11-13">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yellow"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_date</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2019-02-18"</span>),</span>
<span id="cb11-15">                              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2019-04-23"</span>)),</span>
<span id="cb11-16">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date_breaks =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1 week"</span>, </span>
<span id="cb11-17">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date_labels =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%b-%d"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number_si</span>())</span></code></pre></div>
</details>
</div>
<p>Let’s see how it looks like.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We put everything together with cowplot</span></span>
<span id="cb12-2">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(share,intro_decay,</span>
<span id="cb12-3">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rel_heights =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save</span></span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"share_plot.svg"</span>, </span>
<span id="cb12-6">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, </span>
<span id="cb12-7">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb12-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"retina"</span>)</span></code></pre></div>
</details>
</div>
<p>The final version is this one.</p>
<p><img src="https://matiasandina.netlify.app/posts/2019-04-14-data-visualization-challenge-2/share_plot.svg" class="img-fluid"></p>
</section>
<section id="weekday-news" class="level2">
<h2 class="anchored" data-anchor-id="weekday-news">Weekday news</h2>
<p>Because everything is seasonal, let’s analyze by days of the week. Seems like Tuesday to Thursday are the days with most movement, waning down on Friday and into the weekend.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wday</span>(date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">abbr =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">week_start =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb13-2">               daily_posts))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray80"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"point"</span>,</span>
<span id="cb13-5">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun =</span> median, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark_theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of daily posts"</span>,</span>
<span id="cb13-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Weekly post variations"</span>,</span>
<span id="cb13-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Points represent median daily post.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Lines show full data range."</span>)</span>
<span id="cb13-10"></span>
<span id="cb13-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ggsave(filename= "weekly_vars.svg", width = 8, height = 6 , dpi="retina")</span></span></code></pre></div>
</details>
</div>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2019,
  author = {Andina, Matias},
  title = {Data {Visualization} {Challenge} 2},
  date = {2019-04-14},
  url = {https://matiasandina.netlify.app/posts/2019-04-14-data-visualization-challenge-2/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2019" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2019. <span>“Data Visualization Challenge 2.”</span>
April 14, 2019. <a href="https://matiasandina.netlify.app/posts/2019-04-14-data-visualization-challenge-2/">https://matiasandina.netlify.app/posts/2019-04-14-data-visualization-challenge-2/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>learning</category>
  <guid>https://matiasandina.netlify.app/posts/2019-04-14-data-visualization-challenge-2/</guid>
  <pubDate>Sat, 13 Apr 2019 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Email analysis</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/</link>
  <description><![CDATA[ 





<p>I am keen on tracking things. Some people call this <em>personal analytics</em>, I call it fun. In this post, I will explore how to extract your email information using python and R. My goal is to do some analysis on the data and, hopefully, explore different visualizations that can inform future behavior.</p>
<section id="emails-from-gmail" class="level2">
<h2 class="anchored" data-anchor-id="emails-from-gmail">Emails from Gmail</h2>
<p>Reading emails in python is quite simple, we need to import the mailbox library. My file is called <code>correo</code> and comes from downloading my Gmail stuff out of https://takeout.google.com/settings/takeout. It can take a while so be patient.</p>
<p>This should return something that looks like:</p>
<pre><code>X-GM-THRID
X-Gmail-Labels
Received
MIME-Version
Date
To
From
Subject
Content-Type
Content-Disposition
Message-Id</code></pre>
<p>Let’s save the info we care about into a new file. We select <code>subject</code>, <code>from</code>, <code>date</code>, <code>to</code>, and some variables that allow us to keep track of things (i.e, labels and threads).</p>
</section>
<section id="emails-from-thunderbird" class="level2">
<h2 class="anchored" data-anchor-id="emails-from-thunderbird">Emails from Thunderbird</h2>
<p>I keep 3 accounts in Thunderbird. Using the <a href="https://addons.thunderbird.net/en-US/thunderbird/addon/importexporttools/">ImportExportTools Add-on</a>, I exported things into <code>.mbox</code> format. Following a similar procedure to the one depicted above, I got the other three accounts exported to <code>.csv</code> files. Just be sure you select the correct keys (see example below, this might change for other email clients).</p>
</section>
<section id="data-cleaning" class="level2">
<h2 class="anchored" data-anchor-id="data-cleaning">Data cleaning</h2>
<p>Let’s switch from python to R<sup>1</sup>.</p>
<p>Unfortunately, emails come tagged (things like <code>"\\?="</code> and other nasty stuff) and you might have to deal with different encodings (the perks of speaking multiple languages). As an example, let’s see what Quora sends me.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>                                                             from
1                         Quora Digest &lt;digest-noreply@quora.com&gt;
2                         Quora Digest &lt;digest-noreply@quora.com&gt;
3                         Quora Digest &lt;digest-noreply@quora.com&gt;
4  =?utf-8?q?Selecci=C3=B3n_de_Quora?= &lt;digest-noreply@quora.com&gt;
5                         Quora Digest &lt;digest-noreply@quora.com&gt;
6                         Quora Digest &lt;digest-noreply@quora.com&gt;
7                         Quora Digest &lt;digest-noreply@quora.com&gt;
8  =?utf-8?q?Selecci=C3=B3n_de_Quora?= &lt;digest-noreply@quora.com&gt;
9  =?utf-8?q?Selecci=C3=B3n_de_Quora?= &lt;digest-noreply@quora.com&gt;
10 =?utf-8?q?Selecci=C3=B3n_de_Quora?= &lt;digest-noreply@quora.com&gt;</code></pre>
</div>
</div>
<p>That’s nasty…Let’s do some cleaning. This function comes really handy for text replacement.</p>
<p>We are going to modify the function a bit, we add <code>x</code> as the string we pass for cleaning and we will remove the tags progressively.</p>
<p>We are ready to use our super cool function and clean the text! Not perfect, but gets us 90% of the way.</p>
<p>Let’s see how emails from Quora changed with this new encoding:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>                                            from
1        Quora Digest &lt;digest-noreply@quora.com&gt;
2        Quora Digest &lt;digest-noreply@quora.com&gt;
3        Quora Digest &lt;digest-noreply@quora.com&gt;
4  Selección_de_Quora &lt;digest-noreply@quora.com&gt;
5        Quora Digest &lt;digest-noreply@quora.com&gt;
6        Quora Digest &lt;digest-noreply@quora.com&gt;
7        Quora Digest &lt;digest-noreply@quora.com&gt;
8  Selección_de_Quora &lt;digest-noreply@quora.com&gt;
9  Selección_de_Quora &lt;digest-noreply@quora.com&gt;
10 Selección_de_Quora &lt;digest-noreply@quora.com&gt;</code></pre>
</div>
</div>
<p>Let’s filter those from “Received” or “Sent” (in Spanish, “Recibidos” or “Enviado”).</p>
<p>To save you from reading a considerable amount of code, I will load the other accounts and modify them accordingly in the background. I will finally merge everything together. Just enjoy the kitten while the code is running in my machine.</p>
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/001-kitty.jpg" class="img-fluid"></p>
</section>
<section id="analysis" class="level2">
<h2 class="anchored" data-anchor-id="analysis">Analysis</h2>
<p>There’s still some stuff to clean, but I’d rather go into the analysis. So, let’s get some questions to guide our purpose:</p>
<ol type="1">
<li>Who sends me the most emails? Who receives emails from me?</li>
<li>When do I get emails (mostly)?</li>
<li>When should I do something about it (aka, reply)?</li>
</ol>
<blockquote class="blockquote">
<p><strong>Warning:</strong> We have to dance with parsing dates and times. I highly recommend being familiar with <code>lubridate</code> (for example, see https://rdrr.io/cran/lubridate/man/parse_date_time.html).</p>
</blockquote>
<section id="most-frequent-senders" class="level3">
<h3 class="anchored" data-anchor-id="most-frequent-senders">Most frequent senders</h3>
<p>Just because I’m curious, let’s take a look at who are the all time senders!</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>                    from   n
1                  Quora 393
2                 Maggie 316
3                   Yair 216
4                Luciano 173
5                  Sarah 167
6                  "Bank 161
7           "Amazon.com" 139
8                Mariana 138
9  pubchase@zappylab.com 131
10            "Mendeley" 126</code></pre>
</div>
</div>
<p>It’s cool to know that my lingering feeling (“wow…<code>Quora</code> just spams the hell out of me”) is supported by data. Other big spammers are, of course, the Bank and Amazon. People I work with and friends come high up too. Funny to see Mendeley and Pubchase on the top ten, it’s been a long journey of them sending me papers, thank you for that<sup>2</sup>.</p>
</section>
<section id="from-me-to-you" class="level3">
<h3 class="anchored" data-anchor-id="from-me-to-you">From me to you</h3>
<p>Let’s try to find the people I directly send the most emails to. I tend to send a lot of automatic reminders via email to myself so I removed me from the destination.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>       to   n
1 Mariana 192
2 Mariana 126
3    Yair  86
4 Mélanie  64
5   Beata  59</code></pre>
</div>
</div>
<p>Looks like both my former advisers get most of my output (yes, same name first name, not related).</p>
</section>
</section>
<section id="working-with-dates-and-times" class="level2">
<h2 class="anchored" data-anchor-id="working-with-dates-and-times">Working with dates and times</h2>
<p>Every time I have to deal with dates, I have a miniature panic attack. As a general rule, you have to have all the variables that you want to use as separate columns (i.e, year, month, day, week_day, time, …). The <code>lubridate</code> package helps a lot, but it’s still quite an effort.</p>
<p>Working only with times of the day, regardless of date itself is problematic. Working with periods is difficult, so <code>as.numeric(x, "hour")</code> is a friend.</p>
<p>Here’s a hint of how the <code>date</code> column in the original data actually looks like. This may or might not look the same way for you, it depends on your date settings.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>                             date
1 Sat, 23 Mar 2019 08:57:48 -0700
2 Sat, 23 Mar 2019 08:57:32 -0700
3 Sat, 23 Mar 2019 20:25:31 -0400
4 Sat, 23 Mar 2019 08:57:46 -0700
5 Sat, 23 Mar 2019 08:57:35 -0700</code></pre>
</div>
</div>
<p>Let’s create all the variables we need. It seems like a lot because it <em>should</em> work out of the box and it doesn’t, but it’s actually somewhat straight-forward to get most of what we want.</p>
</section>
<section id="birdseye" class="level2">
<h2 class="anchored" data-anchor-id="birdseye">Birdseye</h2>
<p>Let’s look at how the whole email movement looks like. In the last couple of years, I clearly felt the load rising and rising. The lack of data in the early years is mostly due to me not downloading everything from the Hotmail account (it’s too late, too far in the past to fix :P). Besides, the trend likely holds quite well.</p>
<div class="cell" height="6">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/index_files/figure-html/tile-plot-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>If we split by input and output, we can easily see that the input-output ratio went nuts when I moved to the US.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This is not really surprising, given the amount of unsolicited advertising I started getting since the move. Yes, I’m talking to you again Quora/Amazon/people trying to sell me stuff<sup>3</sup>. Of course, University related chains likely take a big chunk of the pie.</p>
<p>I don’t feel like parsing out each sender out of the sheer amount. I have had the Gmail and Hotmail accounts for more than 10 years, but the University email is something relatively recent. All in all, considering the time I’ve had each account, the input rate coming from universities worries me. Here are the total email for each account:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>
  Gmail hotmail     MIT   umass 
   7481   10331    1297    7122 </code></pre>
</div>
</div>
<section id="when" class="level3">
<h3 class="anchored" data-anchor-id="when">When</h3>
<p>Let’s add the time of the day to the equation. This plot was made using <code>ggbeeswarm</code> package, I highly recommend checking it, it’s pure power. I got help to put the labels in the <code>y</code> axis from ‘00:00’ to ‘24:00’. You can find a toy example in <a href="https://stackoverflow.com/questions/55463735/how-to-force-scale-y-datetime-scale-to-show-2400-instead-of-0000-in-r/55464995#55464995">this StackOverflow question</a>.</p>
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/email-analysis-beeswarm.png" class="img-fluid"></p>
<section id="daily-news" class="level4">
<h4 class="anchored" data-anchor-id="daily-news">Daily news</h4>
<p>What’s the average number of emails per day? I’m including all the emails in from 2015 to 2019, including those that go directly to trash.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>For those looking for some tabulated info, here it is:</p>
<div class="cell">
<div class="cell-output-display">
<table class="caption-top table table-sm table-striped small">
<caption>Number of emails per day received in all accounts</caption>
<thead>
<tr class="header">
<th style="text-align: right;">Year</th>
<th style="text-align: right;">Mean</th>
<th style="text-align: right;">Min</th>
<th style="text-align: right;">Max</th>
<th style="text-align: right;">Mode</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">2015</td>
<td style="text-align: right;">6.8</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">30</td>
<td style="text-align: right;">3</td>
</tr>
<tr class="even">
<td style="text-align: right;">2016</td>
<td style="text-align: right;">10.2</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">45</td>
<td style="text-align: right;">2</td>
</tr>
<tr class="odd">
<td style="text-align: right;">2017</td>
<td style="text-align: right;">14.5</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">68</td>
<td style="text-align: right;">2</td>
</tr>
<tr class="even">
<td style="text-align: right;">2018</td>
<td style="text-align: right;">13.0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">66</td>
<td style="text-align: right;">6</td>
</tr>
<tr class="odd">
<td style="text-align: right;">2019</td>
<td style="text-align: right;">18.9</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">132</td>
<td style="text-align: right;">7</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>I am more inclined to graphics, the following figure shows not only an increasing mean, but, surprisingly, a widening range.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/index_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="all-days-were-not-created-equal" class="level3">
<h3 class="anchored" data-anchor-id="all-days-were-not-created-equal">All days were not created equal</h3>
<p>Of course, the number of emails somewhat depends on the day of the week. We can easily see a decreasing trend.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>
 Mon  Tue  Wed  Thu  Fri  Sat  Sun 
4720 4748 4469 4326 3928 1938 1970 </code></pre>
</div>
</div>
<p>Although the day of the week has influence on the amount of emails received, the time of the day seems to have a stronger, more permanent effect.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/index_files/figure-html/unnamed-chunk-25-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="everything-together" class="level3">
<h3 class="anchored" data-anchor-id="everything-together">Everything together</h3>
<p>If we pool all the data together, it seems that I receive/send emails at all times, although there is more movement in the accounts around 10:00 and 16:30. Overall, the distributions are quite similar<sup>4</sup>.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/index_files/figure-html/unnamed-chunk-26-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<section id="just-for-fun" class="level4">
<h4 class="anchored" data-anchor-id="just-for-fun">Just for fun</h4>
<p>Just for the fun of data visualization. Here’s the same plot but adding <code>coord_polar</code> to it. I believe it creates a very weird but good looking thing. It’s not really a clock but there’s something about it I can’t stop looking at<sup>5</sup>.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/index_files/figure-html/polar-plot-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="split-in-two" class="level3">
<h3 class="anchored" data-anchor-id="split-in-two">Split in two</h3>
<p>As you can see from the figures above, the emails in the received bucket have two humps (wink, Bactrian camel, little prince), but I send emails at almost all times (except maybe between 2 AM and 5 AM). This is a <strong>bad habit</strong>, I should not be sending emails all the time, I should batch to diminish the costs associated with shifting tasks. I could just put a rule of thumb and check emails only once a day (e.g, 12:00:00). However, this might not be the best decision, because it chunks the response time in two very broad categories (either I get back to you somewhat quick, within 2 hours, or I take almost a full day to reply).</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/index_files/figure-html/unnamed-chunk-28-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Additionally, checking emails only once might make me miss something somewhat fleeting. In general, I want to read things during the time they are relevant (did anybody say free pizza?).</p>
<p>The primary goal, then, is to minimize the times I check/send emails without <strong>1)</strong> impacting my perceived response rate and <strong>2)</strong> missing out too much info during the day. But that optimization problem is hard to solve and likely a waste of time (trust me, I tried and I’m not that smart).</p>
<p>I believe we can solve it with a rule of thumb anyway. Let’s say, I would check emails <em>twice</em> a day and respond immediately, unless I need to harness some brain power to create an elaborate response<sup>6</sup>.</p>
<p>I just wrote a “cost function” and calculated the cost for several combinations of times.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> emails <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(simple_label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Received"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">val =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seconds_to_period</span>(my_time))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(val)</span>
<span id="cb9-5"></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate linear distance to minimize </span></span>
<span id="cb9-7"></span>
<span id="cb9-8">dist_to_min <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(values, possible_times){</span>
<span id="cb9-9"> </span>
<span id="cb9-10">  min_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(possible_times)</span>
<span id="cb9-11">  max_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(possible_times)</span>
<span id="cb9-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do nothing to first batch</span></span>
<span id="cb9-13">  corrected_values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(values <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_time,</span>
<span id="cb9-14">                           values,</span>
<span id="cb9-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># shift the ones answered on next day, this already gives positive distance</span></span>
<span id="cb9-16">                          <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">86400</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> values <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> min_time)</span>
<span id="cb9-17"></span>
<span id="cb9-18">  </span>
<span id="cb9-19">  to_second <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">between</span>(corrected_values, min_time, max_time)</span>
<span id="cb9-20">  second_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> corrected_values[to_second]</span>
<span id="cb9-21">  first_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> corrected_values[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>to_second]  </span>
<span id="cb9-22">  </span>
<span id="cb9-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate distance (should be all positive)</span></span>
<span id="cb9-24">  dist_second <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> max_time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> second_batch </span>
<span id="cb9-25">  </span>
<span id="cb9-26">  dist_first <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(first_batch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> min_time,</span>
<span id="cb9-27">                       min_time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> first_batch,</span>
<span id="cb9-28">                       corrected_values)</span>
<span id="cb9-29"></span>
<span id="cb9-30">  total_dist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(dist_first, dist_second))</span>
<span id="cb9-31">  </span>
<span id="cb9-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(total_dist)</span>
<span id="cb9-33">}</span></code></pre></div>
</details>
</div>
<p>Now we can use our <code>dist_to_min</code> function in a loop. We’ll calculate from the first second of the day, to the last (86400) every half hour (1800 sec).</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the data to iterate over</span></span>
<span id="cb10-2">val <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">86400</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1800</span>)</span>
<span id="cb10-3">val <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">combn</span>(val,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(val) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var2"</span>)</span>
<span id="cb10-5">distance <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(val))</span>
<span id="cb10-6"></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For loop...</span></span>
<span id="cb10-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(val)){</span>
<span id="cb10-9">  possible_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> val[i, ]</span>
<span id="cb10-10">  </span>
<span id="cb10-11">  distance[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist_to_min</span>(values, possible_times)</span>
<span id="cb10-12">  </span>
<span id="cb10-13">}</span></code></pre></div>
</details>
</div>
<p>The function calculates the distance we want to minimize. The output looks like this.</p>
<div class="cell" width="8">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/index_files/figure-html/unnamed-chunk-31-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Sounds like the combinations we care about are those below 2.5e+8.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/index_files/figure-html/unnamed-chunk-32-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>All this long post is to say that, from now on, I will be answering my emails in either one of these combinations.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>  first_batch second_batch
1   12H 0M 1S    18H 0M 1S
2   11H 0M 1S   17H 30M 1S</code></pre>
</div>
</div>
</section>
<section id="a-finer-grain" class="level3">
<h3 class="anchored" data-anchor-id="a-finer-grain">A finer grain</h3>
<p>Just for the fun of it, let’s take a closer look, a second by second analysis. It seems like machine programmed emails peak at 2 and 3 seconds past midnight.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>       time simple_label Freq
1  00:00:02     Received   77
2  00:00:03     Received   43
3  15:32:51     Received    6
4  10:17:11     Received    5
5  12:05:40     Received    5
6  12:09:11     Received    5
7  12:42:03     Received    5
8  15:30:29     Received    5
9  17:17:06     Received    5
10 09:07:15     Received    4</code></pre>
</div>
</div>
<p>Who are these emails coming from anyway?</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 × 2
   from         n
   &lt;chr&gt;    &lt;int&gt;
 1 @mit.edu    33
 2 @mit.edu    24
 3 @mit.edu    23
 4 @mit.edu    10
 5 @mit.edu     6
 6 @mit.edu     6
 7 @mit.edu     4
 8 @mit.edu     3
 9 @mit.edu     3
10 @mit.edu     2</code></pre>
</div>
</div>
<p>Looks like people at MIT programmed news to be sent seconds after midnight.</p>
</section>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>I have had <em>a lot</em> of fun doing this project. I also experienced an enormous amount of frustration with dates. Moreover, every time I thought this project was over, a new little idea for a <em>not so little</em> graph came into my mind. Of course, I went after it. I hope this info helps other people take a look at their own personal analytics and make some decisions. I am somewhat happy I have almost all notifications turned off (hence, no Facebook/Twitter/Slack/whatever appearing as top senders). In fact, turning email notifications off is the first thing I do when I sign up for a service/site, I encourage you to do the same.</p>
<p>Batching is something I will start testing. I can’t control my input but, hopefully, the distributions of my sent email will start matching the times I designated. More importantly, people will not notice, even if the email input keeps increasing.</p>
<hr>
<p>Some people requested me to do the following scatter-plot. I went with the ggbeeswarm version on the text because I find it more appealing.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/index_files/figure-html/unnamed-chunk-36-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<hr>
<p>I excluded parts of the code because it was too much. I am happy to share if requested!</p>
<hr>
<p><strong>Sources:</strong></p>
<p>https://jellis18.github.io/post/2018-01-17-mail-analysis/<br>
https://blog.stephenwolfram.com/2012/03/the-personal-analytics-of-my-life/<br>
https://uc-r.github.io/kmeans_clustering</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>You could actually stay in python (follow https://jellis18.github.io/post/2018-01-17-mail-analysis/). I’m way more comfortable with R for analysis and I only wanted python because I had the copy-paste version of getting my <code>.mbox</code> file to <code>.csv</code> fast.↩︎</p></li>
<li id="fn2"><p>I had signed up for Mendeley <em>before</em> Elsevier bought it…I’m not quite happy about it now, but at least I still get paper recommendations.↩︎</p></li>
<li id="fn3"><p>I know I could just <em>unsubscribe</em> to these kind of things, just the way I do with 99% of all other aggressive garbage. I just didn’t do it for these senders.↩︎</p></li>
<li id="fn4"><p>Do they look like an elephant inside a boa or a hat?↩︎</p></li>
<li id="fn5"><p>Please, if you know how to make the 0:00 or 24:00 appear on the center, reach out! I couldn’t figure it out.↩︎</p></li>
<li id="fn6"><p>If you have as much free time as me, you can run a <code>kmeans(...)</code>. My emails actually turned out to be around 2 clusters.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2019,
  author = {Andina, Matias},
  title = {Email Analysis},
  date = {2019-04-06},
  url = {https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2019" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2019. <span>“Email Analysis.”</span> April 6, 2019. <a href="https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/">https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>learning</category>
  <guid>https://matiasandina.netlify.app/posts/2019-04-06-email-analysis/</guid>
  <pubDate>Fri, 05 Apr 2019 23:00:00 GMT</pubDate>
</item>
<item>
  <title>R pipeline – It’s a trap!</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2019-02-01-r-pipeline-its-a-trap/</link>
  <description><![CDATA[ 





<p>Here’s how the story usually goes: It starts with you, sitting in front of the computer screen, thinking: <em>What a lovely day for some data analysis!</em>.</p>
<p>This day is great because you have collected some data or maybe because you happened to find some data somewhere, begging to be part of a smoking good plot.</p>
<section id="raw-data-inside-tin-software" class="level2">
<h2 class="anchored" data-anchor-id="raw-data-inside-tin-software">Raw data inside Tin Software</h2>
<p>Having data feels so good, that itching feeling in your fingers, the rush to know. How does it look like? You <em>need</em> to know. But let’s be honest, no dataset comes clean. You have to fight your way to finally get the squeaky clean readable <code>data.frame</code>.</p>
<p>Why is data <em>dirty</em>? Well, there are many reasons. Today I want to focus on the manufacturers.</p>
<p>Manufacturers don’t care for tidiness or openness, they use the format that works for them. They care for proprietary software solutions that help them help you, for a little contribution <sup>1</sup>.</p>
</section>
<section id="reclaiming-your-data" class="level2">
<h2 class="anchored" data-anchor-id="reclaiming-your-data">Reclaiming your data</h2>
<p>Of course, your data is your <em>own</em> and there has to be a way of getting it out of the tin software. So, you pull up your sleeves and go for it: <em>there must be a way to get a text file out of this</em>. Fortunately, but not after a lot of clicking, you find a way to get your <code>raw_data.csv</code> file exported.</p>
</section>
<section id="untitled1" class="level2">
<h2 class="anchored" data-anchor-id="untitled1">Untitled1</h2>
<p>You are now more than ready to <code>read.csv(...)</code> your file. You open a new empty script and rush through commands. Read it. Do some quick wrangling. Maybe even a manual edit? The goal at this stage is to swift through it. You accept hard-coding some values, why not?</p>
<p><code>df &lt;- df[3:3245, 18:22]</code> doesn’t sound that bad at this stage.</p>
<p>Before you can tell, you end up with less than 50 lines of code that accomplish the task, a sort of <code>x + y + z -&gt; result</code>. This feels good!</p>
</section>
<section id="plot" class="level2">
<h2 class="anchored" data-anchor-id="plot">Plot</h2>
<p>You plot the data. Yes, you might even use <em>base graphics</em> at this stage. It looks horrible, but the relationship is there, and you smile. It’s encouraging, in your next meeting, you will discuss the great advances in your research line (added n=3 to a group).</p>
</section>
<section id="periodic" class="level2">
<h2 class="anchored" data-anchor-id="periodic">Periodic</h2>
<p>But something holds you when you try to escape back to the real world. You know that this process is gonna happen more than once. Hopefully, every week or so, you’re going to get your <code>sample of interest</code> read in that <code>machine of hell</code> and, if you want a quick taste of that sweet data, you’d better clean your script and make it a nice <em>pipeline</em>. Here’s where your Advanced R (http://adv-r.had.co.nz/) voice whispers to you: <em>Everything to parameters, parameters to functions.</em></p>
</section>
<section id="functions" class="level2">
<h2 class="anchored" data-anchor-id="functions">Functions</h2>
<p>Let’s think in more general terms now…Where is the regular expressions God when I need it?</p>
<p>You don’t really remember, but there’s Google and there’s <code>stringr</code>. You’re quite sure you’ll find a way to extract all relevant info and recycle it through the pipeline. You create universal values that are shared, <code>ID_this</code>, <code>ID_that</code>. Naming names wasn’t that difficult after all!</p>
<p>Your vision is still clear, maybe it’s because of the coffee, so you quickly wrap your sequential steps into functions that directly resemble them. You proudly name the files after the steps they perform (as if you would remember what <code>clean_and_tidy_df.R</code> does three months from now).</p>
<p>You still have a sequence: it now looks like <code>x = f(...) + y = g(...) + z = h(...) -&gt; result</code>. Not bad for a couple hours of work!</p>
</section>
<section id="climax" class="level2">
<h2 class="anchored" data-anchor-id="climax">Climax</h2>
<p>You find yourself at the climax of your endeavor. You can easily do a sequence of calls to functions. Moreover, everything is fresh in your memory and you have not tested your functions extensively. Things appear to work because you haven’t invested enough effort to break them.</p>
<ul>
<li>What will happen when dates change?</li>
<li>Is your description of the problem(s) correct?</li>
<li>Are your solutions working despite not being authoritative (aka, how many unknown unknowns waiting to bite you?)?</li>
<li>You are the only one running this code now, is that going to be the case <em>forever</em>?</li>
<li>Packages will update tomorrow. Are you ready for that?</li>
</ul>
<p>All this ignorance feels a lot like happiness. Again, you are strongly tempted to get up from your desk and go live your life.</p>
</section>
<section id="wake-up" class="level2">
<h2 class="anchored" data-anchor-id="wake-up">Wake up</h2>
<p>It doesn’t really matter how long it takes, your code will break. You realize your functions depend on global parameters, the date, the folder structure, the file names, and a stupid pattern on row 7 that is manually typed on <code>machine of hell</code> and therefore might contain human errors.</p>
<p>You cry, at least for a microsecond. Then you decide it’s time to bring the big guns to the fight. Everything will be standardized. It’s time for <code>list.files()</code> and <code>lapply()</code> to save the day.</p>
</section>
<section id="everything-is-a-list" class="level2">
<h2 class="anchored" data-anchor-id="everything-is-a-list">Everything is a list</h2>
<p>You create <code>wrapper_of_clean_and_tidy_df.R</code> and all sorts of other wrapper functions that can handle lists. Why? Because <em>everything is a list now</em>. You will load all the data, make a huge list, loop over, and apply all-purpose functions. Remember <code>x</code>? Neither do I, but it’s somewhere there, running at the bottom.</p>
<p>But this <code>list -&gt; list -&gt; list -&gt; list of results</code> is a bit confusing, where is the stuff I care about?. Don’t even get me started with the lists of lists.</p>
</section>
<section id="checkpoints" class="level2">
<h2 class="anchored" data-anchor-id="checkpoints">Checkpoints</h2>
<p>By this point, even if you will be the only one running this code, you are in deep need of some hints that point you towards what is going on.</p>
<p>You also have big objects that were only meaningful on the very first time, things that you never want to calculate again. But <em>What if some day…?</em> Yes, you know how this one goes. So, go ahead, you are allowed to add this line:</p>
<p><code>readline(prompt = "This was only computed once in the life of the Universe, compute again [Y/N]? &gt; ")</code></p>
<p>Checkpoints are also useful tools to handle errors that might come in the data, find typos, sort out dates, prevent the wrong data type from entering a function, among others.</p>
<p>For example, you might be expecting something that looks like <code>yyyy-mm-dd_filename.csv</code>, but for some reason you end up trying to read <code>other_filename.csv</code>. Well, good luck converting <code>other</code> to date format. Moreover, are you really trying to use <code>"[0-9]{4}-[0-9]{2}-[0-9]{2}"</code> as the pattern to match to <code>yyyy-mm-dd</code>? Come on…you can do better than this!</p>
<p>Wondering where are those <code>NAs</code> coming from? Wondering what’s the length of a <code>NULL</code> character? Been there, done that. Don’t worry, enough checkpoints can solve the problem.</p>
<p>At this point, after another couple hours, your code is working under several layers of <code>if(condition) {...} else {...}</code> statements. Good job, feeling like a programmer yet?</p>
</section>
<section id="what-does-the-code-do-again" class="level2">
<h2 class="anchored" data-anchor-id="what-does-the-code-do-again">What does the code do again?</h2>
<p>Because your code is now looking like:</p>
<p><code>wrapper of wrapper of x + wrapper of wrapper of y + wrapper of wrapper of z -&gt; ???</code></p>
<p>You have no idea what’s going on unless you run the whole chain. But you did your work and it pays off. The code works like a charm! You can see lines of code dropping, messages being printed, prompts being asked and answered, graphs popping every now and then. You even check some errors by trying to run corrupted data, errors are being thrown! Heaven.</p>
<p>You are ready now, the code is working, time to collect a <em>shit ton</em> of data.</p>
</section>
<section id="why-are-you-doing-this-to-yourself" class="level2">
<h2 class="anchored" data-anchor-id="why-are-you-doing-this-to-yourself">Why are you doing this to yourself?</h2>
<p>You didn’t optimize for <em>that</em> much data. Your code is now running at a brand new speed: <em>turtle</em>. You can go get coffee, stop to chat a for a while with the students in another lab and come back to the computer, only to see it improve a few % points.</p>
<p>You did this to yourself. You don’t need those 17 extra plots in between calculations every single time. You have no time to look at them if you are running hundreds of tiny files as inputs. Besides, you already know that your method works, the calibration curve is calibrated and the machine parameters lie within the expected distribution.</p>
</section>
<section id="save-before-continue" class="level2">
<h2 class="anchored" data-anchor-id="save-before-continue">Save before continue</h2>
<p>Gaming rules apply: before fighting the boss, save the game, just in case you know…you die in the fight. You don’t want to start all over, do you?</p>
<p>But we seldom do this unless we absolutely have to. We don’t like to leave a trail of intermediate computations. In a sense, this might be dangerous, what if something broke in between, but because we have an old copy we are able to go through the pipeline without noticing? It makes me cringe.</p>
<p>But you don’t want to calculate years of data just to look how much the new addition changes the output, right? Start saving intermediate steps!</p>
</section>
<section id="package" class="level2">
<h2 class="anchored" data-anchor-id="package">Package</h2>
<p>You said you were going to have the data analysed by tomorrow, but you spent the whole day waiting for it to run, debugging and trying to make the pipeline even more tight. That thing you did, the saving intermediate files, turned out to be far more complicated than what you expected. You realized exactly how many environment variables were being created and used during the pipeline. You re-learn the term <code>scoping</code> and you learn to worship it. Nah, 10 arguments it’s not too much, you will <em>surely</em> remember them all when you call the function! No data so far, no data that you can <em>show</em> to another human being.</p>
<p>It’s well past midnight, your eyes hurt, there’s no more ice cream to keep you excited. But a question creeps into your mind, a revelation:</p>
<p><em>Should I start from scratch and make this my own package? Yes..that’s what I’m gonna do…!</em></p>
<hr>
<p>Stop! It’s a trap!</p>
</section>
<section id="steps-of-the-race-to-the-bottom" class="level2">
<h2 class="anchored" data-anchor-id="steps-of-the-race-to-the-bottom">Steps of the race to the bottom</h2>
<p>Just as recap…be my guest.</p>
<ol type="1">
<li>You have a <code>raw_data.csv</code>.</li>
<li>You open an empty script (<em>Untitled1</em>) and write a few lines that do sequentially something like x + y + z -&gt; result.</li>
<li>You make a <em>very</em> raw representation (even using base graphics).</li>
<li>You <em>know</em> this is going to be periodically done, so you shift to functions, you parametrize some things.</li>
<li>Now you have x = f(…), y = g(…), and z(…).</li>
<li>You are happy because you still can do something like f(…) + g(…) + z(….).</li>
<li>You realize your functions depend on global parameters like the date in which you do each of your experiments.</li>
<li>You decide you are going to take this a step forward, here comes <code>list.files</code> and <code>lapply()</code> to save the day.</li>
<li>You wrap your main functions inside other functions that are compatible with lists (because now EVERYTHING is a list).</li>
<li>You realize that you lost.</li>
<li>You add checkpoints, questions, exceptions (for all those moments where data behave as well…normal messy data).</li>
<li>Your code has grown so much you have no clue what it does unless you run the full script, so now it looks like wrapper of wrapper x + wrapper of wrapper y + wrapper of wrapper z -&gt; entangled results.</li>
<li>You are so happy that you can run all those files like a charm (and it works!) so you acquire a shit ton of data.</li>
<li>You didn’t optimize for “a shit ton of data”, your code is slow now. Also…what were you thinking? You don’t need those 17 extra plots in between calculations. You have no time to look at them now that you are running hundreds of tiny files as inputs.</li>
<li>Calculations take forever now. You realize that you had to save intermediate steps.</li>
<li>Even if you tried saving them, most of your functions are dependent on other tiny values (dates, number of trials, number of rows of matrix named “WHATEVER”).</li>
<li>Make your own R package.</li>
</ol>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>To be fair, companies are not entirely to blame here. The scientific community (aka, the consumers) demands a visually friendly display, with Excel <code>Copy+Paste</code> capabilities. No wonder why universal text formats are many many clicks away in most software and you need several data wrangling steps before having the thing you want: <em>a tidy table</em>. Data coming from organizations (e.g, UN) is not always super clean either (countries keep changing their names, how dare they!?).↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2019,
  author = {Andina, Matias},
  title = {R Pipeline -\/- {It’s} a Trap!},
  date = {2019-01-02},
  url = {https://matiasandina.netlify.app/posts/2019-02-01-r-pipeline-its-a-trap/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2019" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2019. <span>“R Pipeline -- It’s a Trap!”</span> January
2, 2019. <a href="https://matiasandina.netlify.app/posts/2019-02-01-r-pipeline-its-a-trap/">https://matiasandina.netlify.app/posts/2019-02-01-r-pipeline-its-a-trap/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>learning</category>
  <guid>https://matiasandina.netlify.app/posts/2019-02-01-r-pipeline-its-a-trap/</guid>
  <pubDate>Wed, 02 Jan 2019 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Query Pubmed in R</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2018-11-23-query-pubmed-in-r/</link>
  <description><![CDATA[ 





<p>I have seen a couple of presentations that use plots of PubMed query results. I have even seen some of them in papers. I just think it’s really cool, so I wanted to play with something that could provide the data.</p>
<p>A couple of google searches lead me into two nice options to do this in R.</p>
<ol type="1">
<li><code>RISmed</code> package, see <a href="https://cran.r-project.org/web/packages/RISmed/index.html">CRAN</a> or <a href="https://davetang.org/muse/2013/10/31/querying-pubmed-using-r/">Dave Tang’s Blog</a></li>
<li>A custom approach from <a href="https://github.com/rpsychologist/PubMed">Kristoffer Magnusson</a></li>
</ol>
<p>I went with the custom approach, decided to <strong>borrow heavily</strong> from Kristoffer’s repo, and did a few modifications here and there. Mainly, I updated libraries, included some <code>dplyr</code> output to make it cleaner, and separated functions into several files.</p>
<p>You can find the updated code in the following repo:</p>
<p><a href="https://github.com/matiasandina/pubmed_query" class="uri">https://github.com/matiasandina/pubmed_query</a></p>
<p>The logic of the code is to loop over the search terms and the years, performing queries to PubMed each time. To make things more friendly we wrap everything into a <em>main</em> function that performs some checks and handles the multiple calls to the working functions. This main function, <code>query_pubmed()</code>, expects a query (character vector), and 2 years for the time interval (<code>yrStart</code> and <code>yrMax</code>).</p>
<p>The function is somewhat self contained, if it can’t find things on the local computer it will source from GitHub<sup>1</sup>. Here’s a little demo of the main function <code>query_pubmed()</code>. Since we are using internet to get the data, I assume the user will be able to source from GitHub (these calls are often performed via <code>devtools::source_url</code>).</p>
<section id="little-demo" class="level2">
<h2 class="anchored" data-anchor-id="little-demo">Little demo</h2>
<p>Let’s look for the term <code>hiv</code> in publications from the 1970 until today. PubMed requests us to limit the traffic to ~3 queries per second. Thus, queries will take a while because the function has <code>Sys.sleep(0.5)</code> in between iterations. You will see a progress bar for each term (not shown here for simplicity).</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-2_5e1eebdfd48f74449c45b58036930ed4">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-11-23-query-pubmed-in-r/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption>PubMed publications containing the term HIV relative to the total number of publications.</figcaption>
</figure>
</div>
</div>
</div>
<p>I chose to keep the graphic output as simple as possible (aka use ggplot2 defaults) and return a <code>data.frame</code> that can be fed into a custom <code>ggplot2</code> call later, if the users feel like it. Here’s a glimpse of the returned object.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-3_b3e434bc6c9529beab9be03f23a54c16">
<div class="cell-output cell-output-stdout">
<pre><code>  query_term year count total_count         freq
1        hiv 1970     1      219426 0.0004557345
2        hiv 1971     0      223658 0.0000000000
3        hiv 1972     0      227949 0.0000000000
4        hiv 1973     0      231159 0.0000000000
5        hiv 1974     0      235136 0.0000000000
6        hiv 1975     1      249241 0.0004012181</code></pre>
</div>
</div>
</section>
<section id="making-things-faster" class="level2">
<h2 class="anchored" data-anchor-id="making-things-faster">Making things faster</h2>
<p>Total publication numbers should not change<sup>2</sup>. Thus, if we don’t want to waste time grabbing the total number of publications over and over, we can either:</p>
<ol type="1">
<li>Use <code>get_totals()</code></li>
<li>Get it from GitHub</li>
</ol>
<p>I will do my best, but I can’t be certain I will keep running the function and pushing once a year to GitHub (as in forever)<sup>3</sup>. I don’t feel like waiting, I already have a recent version in the repo.</p>
<p>Having this object around will speed the main function (it will not query PubMed every year for the totals). Here’s a graph of the number of publications by year:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-5_787d35ca1fe65647c5a55ceab9da3e41">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-11-23-query-pubmed-in-r/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption>Total publications in PubMed by year. Science is growing :)</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="multiple-terms" class="level2">
<h2 class="anchored" data-anchor-id="multiple-terms">Multiple terms</h2>
<p>We can use multiple terms to query, just make a character vector. For example, let’s add <code>aids</code> and <code>hepatitis b</code>:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-6_0c5324bd417076d9b6535a45c154d894">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-11-23-query-pubmed-in-r/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Because we saved the previous object in the environment, we don’t have to query again, we can merge the data and plot all together.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-7_6c46215540d6695521d335735d97f147">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-11-23-query-pubmed-in-r/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption>Frequency of query terms. Relative to total number of PubMed entries per year.</figcaption>
</figure>
</div>
</div>
</div>
<p>We see that the term <code>aids</code> came first in the literature, before the virus was identified, in the early 1980s. Although strongly correlated with <code>aids</code>, <code>hiv</code> is a term with higher frequency. Research for <code>hepatitis b</code> seems to have kept a constant relative level, growing as much as the total body of research.</p>
<hr>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Granted, several packages are needed to run the code. I assume users will know how to <code>install.packages(...)</code> if in need.↩︎</p></li>
<li id="fn2"><p>There are some variations in the recent years as the data base updates, but shouldn’t be significant for these purposes.↩︎</p></li>
<li id="fn3"><p>Yes, I guess I could automate it but reaching diminishing returns here…↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2018,
  author = {Andina, Matias},
  title = {Query {Pubmed} in {R}},
  date = {2018-11-23},
  url = {https://matiasandina.netlify.app/posts/2018-11-23-query-pubmed-in-r/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2018" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2018. <span>“Query Pubmed in R.”</span> November 23,
2018. <a href="https://matiasandina.netlify.app/posts/2018-11-23-query-pubmed-in-r/">https://matiasandina.netlify.app/posts/2018-11-23-query-pubmed-in-r/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>PhD</category>
  <guid>https://matiasandina.netlify.app/posts/2018-11-23-query-pubmed-in-r/</guid>
  <pubDate>Fri, 23 Nov 2018 00:00:00 GMT</pubDate>
</item>
<item>
  <title>XY-density-maps</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/</link>
  <description><![CDATA[ 





<p>I have been playing around with tracking software and the ways to visualize the position of an animal in an arena over time. Even with normal cameras (30 Hz) and relatively small periods of time (~5 min) we get massive datasets and the only way to make sense of them is to aggregate data over time. I have been interested in neat visualizations (using R), thus here are some ways/comments. I will explore different packages and doing comparisons of the results.</p>
<section id="packages" class="level2">
<h2 class="anchored" data-anchor-id="packages">Packages</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RColorBrewer))</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(KernSmooth))</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(raster))</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2))</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr))</span></code></pre></div>
</div>
</section>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<p>I have an example dataset with <code>XY</code> position of the animal. I also have other morphological data that is irrelevant for this case. See example below:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>         X        Y Orientation MinorAxis MajorAxis
1 325.5522 158.9700   -1.550285  50.47925  130.5679
2 323.3055 156.6896   -1.569706  51.29840  130.3467
3 321.7411 154.8107    1.545683  52.13492  130.3881
4 320.8373 153.3294    1.512549  52.67011  130.6403
5 320.0381 152.5523    1.477299  53.07783  130.1023
6 319.3961 152.2019    1.439171  53.75891  129.6706</code></pre>
</div>
</div>
<p>I will do some setup that is common for all the graphs (aka, color palette and the dimensions of the arena).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get color palette </span></span>
<span id="cb3-2"></span>
<span id="cb3-3">refCol <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorRampPalette</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Spectral'</span>)))</span>
<span id="cb3-4">mycol <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">refCol</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define bin sizes</span></span>
<span id="cb3-7">bin_size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Camera resolution is 640x480. Hence...</span></span>
<span id="cb3-10">xbins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>bin_size </span>
<span id="cb3-11">ybins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>bin_size</span></code></pre></div>
</div>
</section>
<section id="ggplot2" class="level2">
<h2 class="anchored" data-anchor-id="ggplot2">ggplot2</h2>
<p>The reason I always go to <code>ggplot2</code> first is because it’s awesome, I buy into the grammar and find it intuitive to accumulate layers over layers. The underlying thought is that <code>ggplot2</code> handles all problems. In this case, the result has some pros (layers, layers and more layer), and some cons (basically, it doesn’t look amazing).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rat_pos, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(X,Y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_density2d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tile'</span>, </span>
<span id="cb4-3">                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(density)), </span>
<span id="cb4-4">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contour =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb4-5">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(xbins, ybins)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colors =</span>  mycol) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>))</span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(p)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/index_files/figure-html/ggplot2-option-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This is interesting because we can overlay things into the plot. For example the trace:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_path</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/index_files/figure-html/ggplot2-option-1-trace-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>We can further remove the axis (or any other modifications we feel like doing).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_path</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/index_files/figure-html/ggplot2-option-1-noborder-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<section id="helping-ggplot-from-outside" class="level3">
<h3 class="anchored" data-anchor-id="helping-ggplot-from-outside">Helping ggplot from outside</h3>
<p>I found that, if we calculate the density externally, it looks smoother. This is a mixed, <code>bkde2D</code> mediated, <code>ggplot2</code> approach (aka the best of 2 worlds).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">bins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bkde2D</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(rat_pos[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]), </span>
<span id="cb7-2">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bandwidth =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(xbins, ybins),</span>
<span id="cb7-3">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gridsize =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>L, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>L))</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reshape</span></span>
<span id="cb7-6">bins_to_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(</span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(bins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fhat) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(), </span>
<span id="cb7-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>rowname) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fix the name column</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to numeric</span></span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_all</span>(as.numeric)</span>
<span id="cb7-13"></span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(bins_to_plot, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(rowname, name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_raster</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colors =</span>  mycol) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/index_files/figure-html/ggplot2-option-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="update" class="level3">
<h3 class="anchored" data-anchor-id="update">2023 Update</h3>
<p>As of 2023, ggplot is able to handle 2D density heatmaps much better. I haven’t played too much with it, but here are some examples</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rat_pos, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(X,Y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-2">           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_density_2d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"polygon"</span>, </span>
<span id="cb8-3">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contour =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb8-4">                           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(level)),</span>
<span id="cb8-5">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colors =</span>  mycol) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rat_pos, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(X,Y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_density_2d_filled</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spectral"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="using-raster-package" class="level2">
<h2 class="anchored" data-anchor-id="using-raster-package">Using raster package</h2>
<p>The <code>raster</code> package is maybe an older solution, which is surprisingly low demand. In 3 lines of code we get a perfectly functional plot. On the other hand, it’s not the best looking graph and we get the caveats (yes, <code>base</code> graphics).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">raster</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmn=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymn=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmx=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymx=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">res=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb10-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rasterize</span>(rat_pos[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'count'</span>)</span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xaxt=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ann=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yaxt=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/index_files/figure-html/raster-package-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="documentation" class="level2">
<h2 class="anchored" data-anchor-id="documentation">Documentation</h2>
<p>I have found a good amount of advice and inspiration in the links below.</p>
<ul>
<li>http://stat405.had.co.nz/ggmap.pdf</li>
<li>https://stackoverflow.com/questions/24078774/overlay-two-ggplot2-stat-density2d-plots-with-alpha-channels?lq=1</li>
<li>https://www.r-bloggers.com/5-ways-to-do-2d-histograms-in-r/</li>
<li>https://stackoverflow.com/questions/24845652/specifying-the-scale-for-the-density-in-ggplot2s-stat-density2d</li>
</ul>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2018,
  author = {Andina, Matias},
  title = {XY-Density-Maps},
  date = {2018-07-13},
  url = {https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2018" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2018. <span>“XY-Density-Maps.”</span> July 13, 2018. <a href="https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/">https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <guid>https://matiasandina.netlify.app/posts/2018-07-13-XY-density-maps/</guid>
  <pubDate>Thu, 12 Jul 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Github style calendar heatmaps</title>
  <dc:creator>Matias Andina</dc:creator>
  <link>https://matiasandina.netlify.app/posts/2018-05-27-github-style-calendar-heatmap/</link>
  <description><![CDATA[ 





<section id="the-commit-heatmap" class="level2">
<h2 class="anchored" data-anchor-id="the-commit-heatmap">The Commit Heatmap</h2>
<p>I like how the commit heatmap looks in Github. I wanted to play with something that could be plotted that way. I’ve seen some beautiful things done in <code>d3</code> and javascript. But, of course, I wanted to make it in <code>R</code>. Turns out a bunch of other people have great ideas for how to go about it. Thus, I’m borrowing heavily from them<sup>1</sup>.</p>
</section>
<section id="loading-packages" class="level2">
<h2 class="anchored" data-anchor-id="loading-packages">Loading packages</h2>
<p>We will need a few packages to generate this plot.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lubridate)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(viridis)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Color palette</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggthemes) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># theme tufte</span></span></code></pre></div>
</details>
</div>
</section>
<section id="the-data" class="level2">
<h2 class="anchored" data-anchor-id="the-data">The data</h2>
<p>Let’s generate a <code>data.frame</code> for May 2018. We want the <code>date</code> as <code>datetime</code> and we also want to extract values from that date (month, year, week, …).</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># choose dates</span></span>
<span id="cb2-2">start_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ymd</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2018-05-01"</span>)</span>
<span id="cb2-3">end_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ymd</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2018-05-31"</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb2-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(start_date, end_date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"days"</span>),</span>
<span id="cb2-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">month</span>(date),</span>
<span id="cb2-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y"</span>),</span>
<span id="cb2-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">week =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%W"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Week starts at 1</span></span>
<span id="cb2-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weekdays</span>(date, T), </span>
<span id="cb2-11">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Thu"</span>,</span>
<span id="cb2-12">                                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fri"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sat"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sun"</span>))))</span></code></pre></div>
</details>
</div>
<p>This is how the data we generated looks like:</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(d)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 5
  date       month year   week day  
  &lt;date&gt;     &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;fct&gt;
1 2018-05-01     5 2018     19 Tue  
2 2018-05-02     5 2018     19 Wed  
3 2018-05-03     5 2018     19 Thu  
4 2018-05-04     5 2018     19 Fri  
5 2018-05-05     5 2018     19 Sat  
6 2018-05-06     5 2018     19 Sun  </code></pre>
</div>
</div>
<p>Now, let’s assume I registered some events in my life and that my data looks something like: A date column <code>date</code>, and the number of events that happened on a particular date (<code>n</code>).</p>
<p>Again, here’s how the data looks like.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">df</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 13 × 2
   date           n
   &lt;date&gt;     &lt;int&gt;
 1 2018-05-15     1
 2 2018-05-16     1
 3 2018-05-17     1
 4 2018-05-18     2
 5 2018-05-19     4
 6 2018-05-20     2
 7 2018-05-21     2
 8 2018-05-22     2
 9 2018-05-23     2
10 2018-05-24     5
11 2018-05-25     2
12 2018-05-26     1
13 2018-05-27     4</code></pre>
</div>
</div>
<p>I can join both <code>data.frames</code> and visualize!</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">df_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>) </span>
<span id="cb7-2"></span>
<span id="cb7-3">df_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(n), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, n)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Fill the NAs with zeros</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(date, n)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stroke=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of events"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-05-27-github-style-calendar-heatmap/index_files/figure-html/line-plot-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>My goal is not to analyze long term trends like seasonality. Thus, this plot is rather unremarkable. Not only because it is a small toy-like dataset, but because it fails to inform calendar information. Let’s try to make it better!</p>
</section>
<section id="abstracting-into-functions" class="level2">
<h2 class="anchored" data-anchor-id="abstracting-into-functions">Abstracting into functions</h2>
<p>A good way of improving the procedure is to abstract things into a function we can call <code>calendar_plot()</code>.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">calendar_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color.scale =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viridis"</span>,</span>
<span id="cb8-2">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">viridis.pal =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb8-3">  </span>
<span id="cb8-4">  p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(data, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> week, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> n)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_tile</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_tufte</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb8-9">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb8-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key.width =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>),</span>
<span id="cb8-11">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,</span>
<span id="cb8-12">                                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>),</span>
<span id="cb8-13">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb8-15">  </span>
<span id="cb8-16">  </span>
<span id="cb8-17">  </span>
<span id="cb8-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Let's add more than one possible pallete. Default keeps being viridis</span></span>
<span id="cb8-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add case switch? or add 'none' for user to define their own ?</span></span>
<span id="cb8-20">  </span>
<span id="cb8-21">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(color.scale<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viridis"</span>){</span>
<span id="cb8-22">    </span>
<span id="cb8-23">    </span>
<span id="cb8-24">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_viridis</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of Events"</span>, </span>
<span id="cb8-25">                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Variable color palette</span></span>
<span id="cb8-26">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> viridis.pal,  </span>
<span id="cb8-27">                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Variable color direction</span></span>
<span id="cb8-28">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> dir,  </span>
<span id="cb8-29">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey93"</span>,</span>
<span id="cb8-30">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n)))</span>
<span id="cb8-31">    </span>
<span id="cb8-32">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(color.scale <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'greens'</span>) {</span>
<span id="cb8-33">    </span>
<span id="cb8-34">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-35">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradient</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of Events"</span>,</span>
<span id="cb8-36">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightyellow2"</span>, </span>
<span id="cb8-37">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkgreen"</span>, </span>
<span id="cb8-38">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey93"</span>)</span>
<span id="cb8-39">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>{</span>
<span id="cb8-40">    </span>
<span id="cb8-41">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Accepted color.scale are 'viridis' and 'greens'"</span>)</span>
<span id="cb8-42">    </span>
<span id="cb8-43">  }</span>
<span id="cb8-44">  </span>
<span id="cb8-45">  </span>
<span id="cb8-46">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## x axis control of labels</span></span>
<span id="cb8-47">  </span>
<span id="cb8-48">  </span>
<span id="cb8-49">  num_months <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>month))</span>
<span id="cb8-50">  </span>
<span id="cb8-51">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(num_months <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb8-52">    </span>
<span id="cb8-53">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb8-54">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb8-55">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>),</span>
<span id="cb8-56">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jan"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Feb"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mar"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"May"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jun"</span>,</span>
<span id="cb8-57">                 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jul"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Aug"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sep"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Oct"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nov"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dec"</span>))</span>
<span id="cb8-58">    </span>
<span id="cb8-59">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb8-60">    </span>
<span id="cb8-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do nothing</span></span>
<span id="cb8-62">    </span>
<span id="cb8-63">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Week Number."</span>)</span>
<span id="cb8-64">    </span>
<span id="cb8-65">  }</span>
<span id="cb8-66">  </span>
<span id="cb8-67">  </span>
<span id="cb8-68">  </span>
<span id="cb8-69">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(p)</span>
<span id="cb8-70">}</span></code></pre></div>
</details>
</div>
<p>We can use <code>calendar_plot()</code> function now to make a plot in <em>calendar-like</em> shape. It is easier to see the data, even with such as small dataset. Below there are two color scale representations of the same data.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calendar_plot</span>(df_plot, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'greens'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-05-27-github-style-calendar-heatmap/index_files/figure-html/calendar-plot-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calendar_plot</span>(df_plot, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">viridis.pal =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-05-27-github-style-calendar-heatmap/index_files/figure-html/calendar-plot-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<hr>
</section>
<section id="update" class="level2">
<h2 class="anchored" data-anchor-id="update">Update</h2>
<p>I was curious about how data would look like for a longer span. Here’s the data for a longer time interval.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calendar_plot</span>(df_plot)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://matiasandina.netlify.app/posts/2018-05-27-github-style-calendar-heatmap/index_files/figure-html/update-plot-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>By no means this is a perfect function and is far from tested. For example, when I did this update, I realized that my <code>calendar_plot()</code> function should handle internally the creation of the <code>data.frame</code> named <code>d</code> that serves as a placeholder. I guess that will happen in a following update <code>:)</code>.</p>
<hr>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Great resources <a href="https://vuorre.netlify.com/post/2016/2016-03-24-github-waffle-plot/">here</a>, <a href="http://ethen8181.github.io/Business-Analytics/articles/calendar_heatmaps/calendar_heatmaps.html">and here</a>↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{andina2018,
  author = {Andina, Matias},
  title = {Github Style Calendar Heatmaps},
  date = {2018-05-27},
  url = {https://matiasandina.netlify.app/posts/2018-05-27-github-style-calendar-heatmap/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-andina2018" class="csl-entry quarto-appendix-citeas">
Andina, Matias. 2018. <span>“Github Style Calendar Heatmaps.”</span> May
27, 2018. <a href="https://matiasandina.netlify.app/posts/2018-05-27-github-style-calendar-heatmap/">https://matiasandina.netlify.app/posts/2018-05-27-github-style-calendar-heatmap/</a>.
</div></div></section></div> ]]></description>
  <category>research</category>
  <category>design</category>
  <category>R</category>
  <guid>https://matiasandina.netlify.app/posts/2018-05-27-github-style-calendar-heatmap/</guid>
  <pubDate>Sat, 26 May 2018 23:00:00 GMT</pubDate>
</item>
</channel>
</rss>
